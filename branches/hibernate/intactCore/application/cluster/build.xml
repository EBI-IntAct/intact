<?xml version="1.0" encoding="UTF-8"?>
<!--
     ANT build configuration file for search module.
     Author: Sugath Mudali, smudali@ebi.ac.uk.
     Version: $Id$
-->

<project name="cluster" basedir="." default="compile">
    <property name="project.version" value="0.1"/>

    <property name="jdk.version" value="1.5"/>

    <!-- Intact core locations -->
    <property name="intact.root" value="../.."/>
    <property name="root.lib.dir" value="${intact.root}/lib"/>
    <property name="root.src.dir" value="${intact.root}/src"/>
    <property name="root.dest.dir" value="${intact.root}/classes"/>
    <property name="root.config.dir" value="${intact.root}/config"/>
    <property name="root.dist.dir" value="${intact.root}/dist"/>
    <!--<property name="root.jar.file" value="${root.dist.dir}/intact-core.jar"/>-->

    <!-- Intact application location. -->
    <property name="intact.app.dir" value=".."/>

    <!-- Context path for search -->
    <property name="cluster.context.dir" value="${intact.app.dir}/context"/>
    <property name="cluster-context-file" value="intact#cluster-test.xml"/>

    <property environment="env"/>
    <property name="tomcat.home" value="${env.CATALINA_HOME}"/>
    <property name="webapps.dir" value="${tomcat.home}/webapps"/>

    <!-- <property name="tomcat.conf.dir" value="${tomcat.home}/conf/Catalina/localhost"/> -->
    <!-- The build properties. -->
    <property file="${intact.root}/config/build.properties"/>

    <property name="intact.app.lib.dir" value="${intact.app.dir}/lib"/>

    <!-- The jdbc properties. -->
    <property file="${intact.root}/config/jdbc.properties"/>


    <property name="dist.dir" value="dist"/>
    <property name="pg.war.file" value="${ant.project.name}.war"/>

    <!-- This project specific paths. -->
    <property name="src.dir" value="src"/>
    <property name="lib.dir" value="WEB-INF/lib"/>
    <property name="dest.dir" value="WEB-INF/classes"/>
    <property name="config.dir" value="WEB-INF/config"/>

    <!-- Build working classpath -->
    <path id="project.class.path">

        <!-- Where the classes are compiled to. -->
        <pathelement path="${dest.dir}"/>

        <!-- Intact core at root. -->
        <pathelement path="${root.dest.dir}"/>

        <pathelement path="${root.lib.dir}/servlet.jar"/>

        <pathelement path="${lib.dir}/log4j-1.2.11.jar"/>
        <pathelement path="${lib.dir}/jdbc_oracle9i_thin_9.2.0.jar"/>

    </path>


    <!-- =================================================================== -->

    <!-- Sets the time stamp and various 'present' properties. -->
    <target name="prepare">
        <tstamp/>
        <!--<available file="${root.jar.file}" type="file" property="intact.jar.present"/>-->
    </target>

    <!-- =================================================================== -->

    <!-- Sets the time stamp. -->
    <target name="set-tstamp">
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd" locale="en"/>
        </tstamp>
    </target>

    <!-- =================================================================== -->

    <!-- Remove 'dest' and docs directories for clean build -->
    <target name="clean" description="Prepare for clean build">
        <!-- Delete directories first -->
        <delete dir="${dest.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <!-- =================================================================== -->

    <!-- Copy configuration files. -->
    <target name="cpConfigFiles">

        <!-- the OJB and log4J properties files should be at the top level in 'dest' -->
        <copy todir="${dest.dir}" file="${config.dir}/log4j.properties"/>
    </target>

    <!-- =================================================================== -->

    <!-- Compile the source tree; creates the dest dir if it doesn't exist. -->
    <target name="compile">

        <!-- Create the dest dir if it doesn't exist. -->
        <mkdir dir="${dest.dir}"/>

        <!-- Only compile search sources only. -->
        <javac srcdir="${basedir}/WEB-INF/src/cluster"
               destdir="${dest.dir}"
               deprecation="on"
               debug="on"
               source="${jdk.version}">
            <classpath refid="project.class.path"/>
        </javac>

        <!-- Copy configuration files -->
        <antcall target="cpConfigFiles"/>
    </target>

    <!-- =================================================================== -->

    <!-- Builds a war file using the current database setup. -->

    <target name="war" description="Builds a war file" depends="set-tstamp, compile, war-oracle"/>

    <!-- =================================================================== -->

    <!-- Builds a war file. The database to include is specified as a parameter. -->

    <target name="build-war" depends="compile"
            description="Builds a war file">
        <echo message="Generating ${war.file} file"/>

        <!-- Create the distribution dir if it doesn't exist. -->
        <mkdir dir="${dist.dir}"/>

        <!-- Create local directories to copy common files. -->
        <delete file="${dist.dir}/${war.file}" quiet="true"/>

        <!-- Copy struts standard tld files -->

        <war destfile="${dist.dir}/${war.file}" webxml="WEB-INF/web.xml" >
            <fileset dir="${basedir}">

                <include name="*.jsp"/>
                <include name="*.html"/>
                <include name="META-INF/context.xml"/>

            </fileset>

            <!-- Include common jar files from intact core. -->
            <lib dir="${lib.dir}">
                <include name="log4j-1.2.11.jar"/>
                <include name="jdbc_oracle9i_thin_9.2.0.jar"/>
            </lib>

            <!-- search specific classes -->
            <classes dir="${dest.dir}"/>
        </war>

        <antcall target="gen-context-file"/>
    </target>

    <!-- =================================================================== -->

    <!--
        Builds a war file for oracle database;
        should be called only after calling set-db-type.
      -->

    <target name="war-oracle" description="Builds a war file for oracle">
        <!-- Load oracle properties. -->

        <property name="war.name" value="${ant.project.name}-oracle-${TODAY}.war"/>

        <antcall target="build-war">
            <param name="war.file" value="${war.name}"/>
        </antcall>
    </target>

    <!-- =================================================================== -->

     <!-- Create the context file. -->

    <target name="gen-context-file">
        <echo message="Creating the context file..."/>

        <!-- Copy the template file -->
        <copy todir="${dist.dir}" file="${cluster.context.dir}/${cluster-context-file}" overwrite="true"/>

        <property name="dist.dir.absolute.path" value="${basedir}/${dist.dir}"/>

        <!-- Customize the context file -->
        <replace file="${dist.dir}/${cluster-context-file}" token="[WAR.ABSOLUTE.PATH]" value="${dist.dir.absolute.path}/${war.file}"/>
        <replace file="${dist.dir}/${cluster-context-file}" token="[server.name]"   value="${server.name}"/>
    </target>

</project>
