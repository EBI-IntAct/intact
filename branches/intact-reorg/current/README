README for IntAct
**********************************************************************

OUTLINE
-------

1. Module Overview
2. Prerequisites
3. Setup
4. Hints and Tips



DETAILED INSTALLATION NOTES
----------------------------

1. Module Overview
------------------

This is the list of modules, in the order they are build:

maven                       : the master POMs, which are the parent POMs for all the modules
intact-core                 : core java sources and data model
app-commons                 : common java sources and utilities for the web applications
sanity-checker              : classes to check if the data is not corrupted
search-engine               : classes which objective is to perform searches in the database
search-app                  : the search web application
maven-editortopics-plugin   : maven plugin that generates a list of editor topics by parsing the intact core java sources
editor-app                  : the editor web application
data-conversion             : classes to convert the data to/from PSI XML files
graph2mif-server            : web application and web service to retrieve IntAct data in PSI XML format
graph2mif-client            : client for the graph2mif web service
tulip-client                : client for the tulip web service
hierarch-view-app           : the hierarch-view web application, to visualise interaction networks
statistic-view              : statistics
mine-app                    : the mine web application
predict-app                 : web application that contain the Pay-as-you-go algorithm


2. Prerequisites
-----------------
To install and run the intact software you must have the following installed in your
environment (or, for the DBs, at least have access to them over the network):

	- java JDK 5.0
	  see http://java.sun.com/j2se/downloads.html
	- maven 2.0.4 or above (all the intact build process relies on Maven)
	  see http://maven.apache.org
	- Tomcat 5.5.x
	- either Postgres 7.2 or Oracle 8.1.6 (or higher)
        for postgres see http://www.postgresql.org/mirrors-ftp.html

The following environment variables should be set:

$CATALINA_HOME - the home directory of your tomcat installation
$CATALINA_OPTS - should be set with your proxy setting (needed by protein loading, and so by search)
                in the EBI, it would be set to '-DproxySet=true -DproxyHost=www-proxy.ebi.ac.uk -DproxyPort=8080'
$JAVA_HOME - the home directory of your JDK

Intact has been tested on both Redhat Linux 7.1, CentOS 3.2 and Windows 2000/XP running inside cygwin, and with both local and
remote postgres databases as well as a remote oracle DB. Thus intact is based around a linux/unix environment, but if you
have Windows then everything can still be used provided you have cygwin installed.


For postgres 7.x:
    To allow all computer in the local network to connect to the database you have to configure the file 'pg_hba.conf'
    in your postgres directory.
    e.g:
    # Allow any user from any host with IP address 127.x.x.x to connect to database
    # TYPE  DATABASE    USER        IP-ADDRESS        IP-MASK           METHOD
    host    all         all         127.0.0.0         255.0.0.0         trust

    See also http://www.postgresql.org/docs/7.x/interactive/client-authentication.html#AUTH-PG-HBA-CONF
    (replace the '7.x' in the URL with your postgres version)


3. Setup
---------
a) Firstly download the intact sources using subversion, with the command:

    svn co https://svn.sourceforge.net/svnroot/intact/branches/intact-reorg/current intact-current

Then, a directory called 'intact-current' will be retrieved with the sources for the modules inside.

b) IntAct build is based on maven, and the database configuration is done using profiles. By default, IntAct comes
with profiles for the EBI internal databases. The default profiles are:

ebi-test: for tests. This profile is activated by default if no profiles are provided
ebi-curators: for the internal production database used by the curators
ebi-production: for the public production database

If you need another database configuration, you can create your profile in your ~/.m2/settings.xml file:

    <settings>
       ...
       <profile>
            <id>my-profile</id>
            <properties>
                <db.host>[DATABASE HOST]</db.host>
                <db.port>[DATABASE PORT]</db.port>
                <db.alias>[DATABASE SID or NAME]</db.alias>
                <db.user>[DATABASE USER]</db.user>
                <db.password>[DATABASE PASSWORD]</db.password>
            </properties>
        </profile>
    <settings>

    Replace the variables between brackets [...] with your information.

You can create the modules for oracle or for postgres. The database is defined by passing the 'db' variable
to the maven command.

c.) For instance, if using the 'ebi-test' profile and oracle, we can execute the command like this:

    mvn -P my-profile -Ddb=oracle clean install

If you execute this in the root directory (intact-current). All modules will be build. The artifact created for each
module is in the 'target' folder of that module. You can just build one module by executing the maven command from the
module directory.


d) the next step for the intact core setup is to load the database. There are sample data files in the data directory,
and to populate your database with this data simply type

	scripts/postgres/testfill.sh 'user/pwd' <dbname> small | medium | large | onlyCV  (postgres - quotes can be omitted if no password)

or
	scripts/oracle/testfill.sh 'user/pwd' <dbname> small | medium | large | onlyCV (oracle)

"small" is for minimal tests, will need < 5 minutes. "large" is full, real data from the Ho and Gavin experiments,
will run ca. 30 minutes.

You should then check your database using an appropriate tool (eg pgaccess for postgres/linux) to make sure you have the
intact tables and that they are populated.


e) Deployment: to deploy the applications just get the resulting war file from the web application modules in the 'target'
folder and copy them in the 'webapps' folder of your Tomcat installation.


4. Hints and Tips
------------------
a) If you find that you get OutOfMemoryErrors with large queries through tomcat, increasing the heap
   size that tomcat uses can help. You can do this simply by setting the envirnoment variable JAVA_OPTS as follows:

   setenv JAVA_OPTS '-Xms128M -Xmx512M' (or use export if you use another shell)

   before you start tomcat.

b) hierarchView can be very memory intensive, and will probably be refactored over time - so be aware that
   you may experience some of the above when submitting many requests to hierarchView.

c) Some IntAct applications, namely hierarchView, statisticView, make use of graphical libraries which, under linux,
   would try to connect to the X11 server. If your DISPLAY variable is not correctly configured this may prevent the
   application from being able to produce graphics and usually display exception such as:

   Exception in thread "main" java.lang.InternalError: Can't connect to X11 window server using 'machine_name:0' as
                                                       the value of the DISPLAY variable.

   If you encounter such problem you could try to give an additional option to the JVM,
   ie. JAVA_OPTS="-Djava.awt.headless=true"
   That should shortcut the access to the X server and allow the application to run smoothly.


ACKNOWLEDGEMENTS
This product includes software developed by
the Apache Software Foundation (http://www.apache.org),
Ed Hill (ed-hill@uiowa.edu), and
the ExoLab project (http://www.exolab.org).


