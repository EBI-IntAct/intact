/*
Copyright (c) 2002 The European Bioinformatics Institute, and others.
All rights reserved. Please see the file LICENSE
in the root directory of this distribution.
*/

package uk.ac.ebi.intact.application.search.struts.taglibs;

import uk.ac.ebi.intact.application.search.business.IntactUserIF;
import uk.ac.ebi.intact.application.search.struts.framework.util.WebIntactConstants;
import uk.ac.ebi.intact.persistence.TransactionException;
import uk.ac.ebi.intact.business.*;

import javax.servlet.jsp.tagext.TagSupport;
import javax.servlet.jsp.JspTagException;
import javax.servlet.jsp.JspException;
import javax.servlet.http.HttpSession;

/**
 * This tag class to begin a new transaction. A new transaction is
 * only started if it hasn't been already started before. In other
 * words, no action taken if a transaction is already in progress.
 * There is no output generated by this tag class.
 *
 * @author Sugath Mudali (smudali@ebi.ac.uk)
 * @version $Id$
 */
public class BeginTransactionTag extends TagSupport {

    /**
     * Evaluate the tag's body content.
     */
    public int doStartTag() throws JspTagException {
        return EVAL_BODY_INCLUDE;
    }

    /**
     * Called when the JSP encounters the end of a tag. This will create the
     * option list.
     */
    public int doEndTag() throws JspException {
        HttpSession session = super.pageContext.getSession();
        IntactUserIF user = (IntactUserIF) session.getAttribute(
            WebIntactConstants.INTACT_USER);
        try {
            super.pageContext.getServletContext().log("Before begin Transaction= " + user.isActive());
            user.begin();
            super.pageContext.getServletContext().log("After begin Transaction= " + user.isActive());
        }
        catch (IntactException te) {
            throw new JspException(te.toString());
        }
        return EVAL_PAGE;
    }
}
