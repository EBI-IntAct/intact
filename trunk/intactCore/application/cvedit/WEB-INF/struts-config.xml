<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC
 	"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
	"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

<!--
     This is the Struts configuration file for the example application,
     using the proposed new syntax.

     NOTE:  You would only flesh out the details in the "form-bean"
     declarations if you had a generator tool that used them to create
     the corresponding Java classes for you.  Otherwise, you would
     need only the "form-bean" element itself, with the corresponding
     "name" and "type" attributes.
-->

<struts-config>

    <!-- ========== Form Bean Definitions =================================== -->
    <form-beans>

        <!-- logon form bean -->
        <form-bean name="loginForm"
                   type="org.apache.struts.action.DynaActionForm">
            <form-property name="username" type="java.lang.String"/>
            <form-property name="password" type="java.lang.String"/>
        </form-bean>

        <!-- The sidebar form -->
        <form-bean name="sidebarForm"
                   type="org.apache.struts.action.DynaActionForm">
            <form-property name="topic" type="java.lang.String"/>
            <form-property name="searchString" initial="*" type="java.lang.String"/>
            <form-property name="shortLabel" type="java.lang.String"/>
        </form-bean>

        <!-- Form bean for adding a comment (annotation) -->
        <form-bean name="commentAddForm"
                   type="org.apache.struts.action.DynaActionForm">
            <form-property name="topic" type="java.lang.String"/>
            <form-property name="description" type="java.lang.String"/>
        </form-bean>

        <!-- Form for editing a comment -->
        <form-bean name="commentEditForm"
            type="uk.ac.ebi.intact.application.cvedit.struts.view.EditForm"/>

        <!-- Form for editing a xref -->
        <form-bean name="xrefEditForm"
            type="uk.ac.ebi.intact.application.cvedit.struts.view.EditForm"/>

        <!-- Form bean for adding a xref (cross reference) -->
        <form-bean name="xrefAddForm"
                   type="org.apache.struts.action.DynaActionForm">
            <form-property name="database" type="java.lang.String"/>
            <form-property name="primaryId" type="java.lang.String"/>
            <form-property name="secondaryId" type="java.lang.String"/>
            <form-property name="releaseNumber" type="java.lang.String"/>
            <form-property name="qualifier" type="java.lang.String"/>
        </form-bean>

        <!-- Dummy form when we don't care about inputs -->
        <form-bean name="dummyForm"
                    type="org.apache.struts.action.DynaActionForm"/>

        <form-bean name="resultForm"
                   type="org.apache.struts.action.DynaActionForm">
            <form-property name="items"
                   type="uk.ac.ebi.intact.application.cvedit.struts.view.ResultBean[]"/>
        </form-bean>

    </form-beans>

    <!-- ========== Global Exceptions ======================================= -->
    <global-exceptions>
        <exception
            key="error.session.expired"
            path="login.error.layout"
            scope="request"
            type="uk.ac.ebi.intact.application.cvedit.exception.SessionExpiredException"
        />
    </global-exceptions>

    <!-- ========== Global Forward Definitions ============================== -->
    <global-forwards>
        <!-- Need this global forward from the index.jsp -->
        <forward name="login"    path="/do/cv/welcome"/>
        <forward name="success"  path="edit.layout"/>
        <forward name="failure"  path="error.layout"/>
    </global-forwards>

    <!-- ========== Action Mapping Definitions ============================== -->
    <action-mappings>

        <!-- Process a user logout -->
        <action path="/cv/welcome"
                type="org.apache.struts.actions.ForwardAction"
            parameter="login.layout">
        </action>

        <!-- Process a user logout -->
        <action path="/cv/logout"
                type="uk.ac.ebi.intact.application.cvedit.struts.security.LogoutAction">
            <forward name="success" path="/do/cv/welcome"/>
        </action>

        <!-- Process a user logon. -->
        <action path="/cv/login"
                type="uk.ac.ebi.intact.application.cvedit.struts.security.LoginAction"
                name="loginForm"
                scope="request"
                input="/login.jsp">
            <forward name="failure" path="login.error.layout"/>
            <forward name="success" path="search.layout"/>
        </action>

        <!-- Process an action for the sidebar. -->
        <action path="/cv/sidebar"
                name="sidebarForm"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.SidebarDispatchAction"
                scope="request"
                parameter="dispatch">
            <!-- No match is found -->
            <forward name="noMatch" path="no.match.layout"/>
            <!-- Multiple results found -->
            <forward name="results" path="/do/cv/results/pre"/>
            <!-- Only a single match is found -->
            <forward name="edit" path="/do/cv/edit/pre"/>
        </action>

        <!-- When the user selects  -->
        <action path="/cv/results/pre"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.ResultsPreAction"
                scope="request">
            <forward name="success" path="match.layout"/>
        </action>

        <!-- Process a new search for a Cv Object. -->
        <action path="/cv/search/new"
                type="org.apache.struts.actions.ForwardAction"
                parameter="search.layout">
        </action>

        <!-- Process a user selects CV object from a search result. -->
        <action path="/cv/results"
                name="resultForm"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.ResultAction"
                scope="request">
            <forward name="success" path="/do/cv/edit/pre"/>
        </action>

        <!-- When the user selects  -->
        <action path="/cv/edit/pre"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.CvEditPreAction"
                scope="request">
        </action>

        <!-- Process selection of Submit, Cancel or Delete buttons from edit.jsp. We need
             the dummyForm as JavaScript uses the hidden property.
         -->
        <action path="/cv/edit"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.CvEditDispatchAction"
                name="dummyForm"
                scope="request"
                parameter="dispatch">
            <forward name="results" path="/do/cv/results/pre"/>
            <forward name="search" path="search.layout"/>
        </action>

        <!-- Actions relating to comments (annotations) -->

        <!-- Adds a new comment or annotation. -->
        <action path="/cv/comment/add"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.CommentAddAction"
                name="commentAddForm"
                scope="request">
        </action>

        <!--
            Edits an existing comment. Need this form to be in session or else
            each edit click will create a new form (causing null pointer
            exception when getItems() is called.
        -->
        <action path="/cv/comment/edit"
                name="commentEditForm"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.CommentEditAction"
                scope="session">
        </action>

        <!-- Deletes an existing comment. -->
        <action path="/cv/comment/del"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.CommentDelAction"
                scope="request">
        </action>

        <!-- Adds a new xref. -->
        <action path="/cv/xref/add"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.XrefAddAction"
                name="xrefAddForm"
                scope="request">
        </action>

        <!--
            Edits an existing xref. Need this form to be in session or else
            each edit click will create a new form (causing null pointer
            exception when getItems() is called.
        -->
        <action path="/cv/xref/edit"
                name="xrefEditForm"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.XrefEditAction"
                scope="session">
        </action>

        <!-- Deletes an existing xref. -->
        <action path="/cv/xref/del"
                type="uk.ac.ebi.intact.application.cvedit.struts.controller.XrefDelAction"
                scope="request">
        </action>

    </action-mappings>

    <plug-in className="org.apache.struts.tiles.TilesPlugin" >
        <set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml"/>
        <set-property property="moduleAware" value="true" />
    </plug-in>

</struts-config>
