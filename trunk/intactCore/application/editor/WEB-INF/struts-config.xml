<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC
 	"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
	"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

<!--
     This is the Struts configuration file for the example application,
     using the proposed new syntax.

     NOTE:  You would only flesh out the details in the "form-bean"
     declarations if you had a generator tool that used them to create
     the corresponding Java classes for you.  Otherwise, you would
     need only the "form-bean" element itself, with the corresponding
     "name" and "type" attributes.
-->

<struts-config>

    <!-- ========== Form Bean Definitions =================================== -->
    <form-beans>

        <!-- logon form bean -->
        <form-bean name="loginForm"
            type="org.apache.struts.validator.DynaValidatorForm">
            <form-property name="username" type="java.lang.String"/>
            <form-property name="password" type="java.lang.String"/>
        </form-bean>

        <!-- The sidebar form -->
        <form-bean name="sidebarForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="topic" type="java.lang.String"/>
            <form-property name="searchString" initial="*" type="java.lang.String"/>
            <form-property name="shortLabel" type="java.lang.String"/>
        </form-bean>

        <!-- Form bean for adding a comment (annotation) -->
        <form-bean name="commentAddForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="topic" type="java.lang.String"/>
            <form-property name="description" type="java.lang.String"/>
        </form-bean>

        <!-- Form for editing Annotated info (short label, fullname) data -->
        <form-bean name="cvinfoForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="ac" type="java.lang.String"/>
            <form-property name="shortLabel" type="java.lang.String"/>
            <form-property name="fullName" type="java.lang.String"/>
        </form-bean>

        <!-- Form for editing a comment -->
        <form-bean name="commentEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.EditForm"/>

        <!-- Form for editing a xref -->
        <form-bean name="xrefEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.EditForm"/>

        <!-- Form bean for adding a xref (cross reference) -->
        <form-bean name="xrefAddForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="database" type="java.lang.String"/>
            <form-property name="primaryId" type="java.lang.String"/>
            <form-property name="secondaryId" type="java.lang.String"/>
            <form-property name="releaseNumber" type="java.lang.String"/>
            <form-property name="qualifier" type="java.lang.String"/>
        </form-bean>

        <!-- Dummy form when we don't care about inputs -->
        <form-bean name="dummyForm"
            type="org.apache.struts.action.DynaActionForm"/>

        <!-- Form to store the result from the search. -->
        <form-bean name="resultForm"
            type="org.apache.struts.action.DynaActionForm">
            <!-- A collection of ResultBean objects -->
            <form-property name="items" type="java.util.Collection"/>
        </form-bean>

        <!-- Form for editing CV info (short label, fullname) data -->
<!--        <form-bean name="cvinfoForm"-->
<!--            type="org.apache.struts.action.DynaActionForm">-->
<!--            <form-property name="ac" type="java.lang.String"/>-->
<!--            <form-property name="shortLabel" type="java.lang.String"/>-->
<!--            <form-property name="fullName" type="java.lang.String"/>-->
<!--        </form-bean>-->

        <!-- Form for entering tax id data -->
        <form-bean name="bioSourceForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="taxId" type="java.lang.String"/>
        </form-bean>

    </form-beans>

    <!-- ========== Global Exceptions ======================================= -->
    <global-exceptions>
        <exception
            key="error.session.expired"
            path="login.error.layout"
            scope="request"
            type="uk.ac.ebi.intact.application.editor.exception.SessionExpiredException"
            />
    </global-exceptions>

    <!-- ========== Global Forward Definitions ============================== -->
    <global-forwards>
        <!-- Need this global forward from the index.jsp -->
        <forward name="login" path="/do/welcome"/>
        <forward name="success" path="edit.layout"/>
        <forward name="failure" path="error.layout"/>
    </global-forwards>

    <!-- ========== Action Mapping Definitions ============================== -->
    <action-mappings>

        <!-- The starting point for the application; display the login layout. -->
        <action path="/welcome"
            type="org.apache.struts.actions.ForwardAction"
            parameter="login.layout">
        </action>

        <!-- Process a user logout -->
        <action path="/logout"
            type="uk.ac.ebi.intact.application.editor.struts.security.LogoutAction">
            <forward name="success" path="/do/welcome"/>
        </action>

        <!-- Process a user logon. -->
        <action path="/login"
            type="uk.ac.ebi.intact.application.editor.struts.security.LoginAction"
            name="loginForm"
            scope="request"
            input="login.error.layout">
            <forward name="failure" path="login.error.layout"/>
            <!-- Successful login; present the search page. -->
            <forward name="success" path="search.layout"/>
        </action>

        <!-- This action is called by tiles when displaying the header. The
             header is changed for editing a CV object. No forward is associated
             with this action.
        -->
        <action path="/tiles/headerSwitch"
            type="uk.ac.ebi.intact.application.editor.struts.action.HeaderSwitchAction">
        </action>

        <action path="/tiles/editorSwitch"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorSwitchAction">
        </action>

        <!-- Process an action for the sidebar. -->
        <action path="/sidebar"
            name="sidebarForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.SidebarDispatchAction"
            scope="request"
            parameter="dispatch">
            <!-- No match is found -->
            <forward name="noMatch" path="no.match.layout"/>
            <!-- Multiple results found -->
            <forward name="results" path="/do/results/pre"/>
            <!-- A single match or created a new object; Load annotations and
                 xrefs to beans or initialize them for the new object.
            -->
            <forward name="success" path="/do/edit/pre"/>
        </action>

        <!-- Populate the beans with search result data for the JSP to display -->
        <action path="/results/pre"
            type="uk.ac.ebi.intact.application.editor.struts.action.ResultPreAction"
            scope="request">
            <forward name="success" path="match.layout"/>
        </action>

        <!-- Process a new search for a Cv Object. -->
        <action path="/search/new"
            type="org.apache.struts.actions.ForwardAction"
            parameter="search.layout">
        </action>

        <!-- Process when a user selects CV object from a search result. -->
        <action path="/results"
            name="resultForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.ResultAction"
            scope="request">
            <!-- Selected an item; fill with annotation and xref data into beans. -->
            <forward name="success" path="/do/edit/pre"/>
        </action>

        <!-- Populate the form beans with annotations and xrefs. -->
        <action path="/edit/pre"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorPreAction"
            scope="request">
            <!-- Fill with short label, full name data into beans -->
            <forward name="success" path="/do/info/pre"/>
        </action>

        <!-- Populate the forms with short label and full name of the CV object
             we are editing at the moment.
        -->
        <action path="/info/pre"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorInfoPreAction"
            scope="request">
        </action>

        <!-- Process selection of Submit, Cancel or Delete buttons from edit.jsp. We need
             the dummyForm as JavaScript uses the hidden property. dispatch property
             contains the action to take (submit/cancel/delete). If we got to this from
             a results page, then go to the results page back again else (i.e., if we got
             here from a direct search) then start a new search.
         -->
        <action path="/edit"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorDispatchAction"
            name="dummyForm"
            scope="request"
            parameter="dispatch">
            <forward name="results" path="/do/results/pre"/>
            <forward name="search" path="search.layout"/>
        </action>

        <!-- Actions relating to editing the info for a CV object. The form
             must be in session for it to retain information for changes to
            the form such as adding annotations/xrfers.
        -->
        <action path="/info/edit"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorInfoAction"
            name="cvinfoForm"
            scope="session">
            <!-- New label; load the CV info to refresh the screen. -->
            <forward name="refresh" path="/do/info/pre"/>
        </action>

        <action path="/biosource/taxid"
            type="uk.ac.ebi.intact.application.editor.struts.action.biosource.TaxIdAction"
            name="bioSourceForm"
            scope="session"
            input="edit.layout">
            <!-- Info data updated; load the info to refresh the screen. -->
            <forward name="refresh" path="/do/info/pre"/>
        </action>

        <!-- Adds a new comment or annotation; updates the edit contents -->
        <action path="/comment/add"
            type="uk.ac.ebi.intact.application.editor.struts.action.CommentAddAction"
            name="commentAddForm"
            scope="request">
        </action>

        <!--
            Edits an existing comment. Need this form to be in session or else
            each edit click will create a new form (causing null pointer
            exception when getItems() is called. This action also handles delete an
            annotation as wel.
        -->
        <action path="/comment/edit"
            name="commentEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.CommentEditAction"
            scope="session">
        </action>

        <!-- Adds a new xref. -->
        <action path="/xref/add"
            type="uk.ac.ebi.intact.application.editor.struts.action.XrefAddAction"
            name="xrefAddForm"
            scope="request">
        </action>

        <!--
            Edits an existing xref. Need this form to be in session or else
            each edit click will create a new form (causing null pointer
            exception when getItems() is called. This action also handles delete a
            xreference as wel.
        -->
        <action path="/xref/edit"
            name="xrefEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.XrefEditAction"
            scope="session">
        </action>

    </action-mappings>

    <!-- ========== Message Resources Definitions =========================== -->

    <message-resources
        parameter="uk.ac.ebi.intact.application.editor.MessageResources"/>

    <!-- ========== Plug Ins Configuration ================================== -->

    <!--
        Add multiple validator resource files by setting the pathnames property
        with a comma delimitted list of resource files to load.
    -->
    <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
        <set-property property="pathnames" value="/WEB-INF/validator-rules.xml,
            /WEB-INF/validation.xml"/>
    </plug-in>

    <plug-in className="org.apache.struts.tiles.TilesPlugin">
        <set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml"/>
        <set-property property="moduleAware" value="true"/>
    </plug-in>

</struts-config>
