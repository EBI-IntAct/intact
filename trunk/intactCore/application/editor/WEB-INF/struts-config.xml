<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE struts-config PUBLIC
 	"-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
	"http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">

<!--
     This is the Struts configuration file for the example application,
     using the proposed new syntax.

     NOTE:  You would only flesh out the details in the "form-bean"
     declarations if you had a generator tool that used them to create
     the corresponding Java classes for you.  Otherwise, you would
     need only the "form-bean" element itself, with the corresponding
     "name" and "type" attributes.
-->

<struts-config>

    <!-- ========== Form Bean Definitions =================================== -->
    <form-beans>

        <!-- logon form bean -->
        <form-bean name="loginForm"
            type="org.apache.struts.validator.DynaValidatorForm">
            <form-property name="username" type="java.lang.String"/>
            <form-property name="password" type="java.lang.String"/>
        </form-bean>

        <!-- The sidebar form -->
        <form-bean name="sidebarForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="topic" type="java.lang.String"/>
            <form-property name="searchString" initial="*" type="java.lang.String"/>
        </form-bean>

        <!-- Form bean for adding a comment (annotation) -->
        <form-bean name="commentAddForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.CommentAddDynaForm">
            <form-property name="topic" type="java.lang.String"/>
            <form-property name="description" type="java.lang.String"/>
        </form-bean>

        <!-- Form for editing Annotated info (short label, fullname) data -->
        <form-bean name="cvInfoForm"
            type="org.apache.struts.validator.DynaValidatorForm">
            <form-property name="ac" type="java.lang.String"/>
            <form-property name="shortLabel" type="java.lang.String"/>
            <form-property name="fullName" type="java.lang.String"/>
        </form-bean>

        <!-- Form for editing a comment -->
        <form-bean name="commentEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.EditForm"/>

        <!-- Form for editing a xref -->
        <form-bean name="xrefEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.EditForm"/>

        <!-- Form bean for adding a xref (cross reference) -->
        <form-bean name="xrefAddForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.XrefAddDynaForm">
            <form-property name="database" type="java.lang.String"/>
            <form-property name="primaryId" type="java.lang.String"/>
            <form-property name="secondaryId" type="java.lang.String"/>
            <form-property name="releaseNumber" type="java.lang.String"/>
            <form-property name="qualifier" type="java.lang.String"/>
        </form-bean>

        <!-- Dummy form when we don't care about inputs -->
        <form-bean name="dummyForm"
            type="org.apache.struts.action.DynaActionForm"/>

        <!-- Form to store the result from the search. -->
        <form-bean name="resultForm"
            type="org.apache.struts.action.DynaActionForm">
            <!-- A collection of ResultBean objects -->
            <form-property name="items" type="java.util.Collection"/>
        </form-bean>

        <!-- Form for entering tax id data -->
        <form-bean name="bioSourceForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="taxId" type="java.lang.String"/>
        </form-bean>

        <!-- Form for experiment data -->
        <form-bean name="experimentForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.experiment.ExperimentDynaForm">
            <form-property name="organism" type="java.lang.String"/>
            <form-property name="interaction" type="java.lang.String"/>
            <form-property name="identification" type="java.lang.String"/>
        </form-bean>

        <!-- Form for interaction data -->
        <form-bean name="interactionForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.interaction.InteractionDynaForm">
            <form-property name="kD" type="java.lang.Float"/>
            <form-property name="organism" type="java.lang.String"/>
            <form-property name="interactionType" type="java.lang.String"/>
        </form-bean>

        <!-- Forms related Interaction -->

        <!-- Form for to display Experiments (Interaction) -->
        <form-bean name="intExperimentForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.EditForm"/>

        <!-- Form for to hold Experiments (Interaction) -->
        <form-bean name="intExperimentHoldForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.EditForm"/>

        <!-- Form to search for an Experiment in an Interaction  -->
        <form-bean name="intExperimentSearchForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="shortLabel" type="java.lang.String"/>
            <form-property name="spAc" type="java.lang.String"/>
            <form-property name="ac" type="java.lang.String"/>
        </form-bean>

        <!-- Form for editing a Protein -->
        <form-bean name="intProteinEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.view.interaction.ProteinEditForm"/>

        <!-- Form to search for a Protein -->
        <form-bean name="intProteinSearchForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property name="shortLabel" type="java.lang.String"/>
            <form-property name="spAc" type="java.lang.String"/>
            <form-property name="ac" type="java.lang.String"/>
            <form-property name="fullName" type="java.lang.String"/>
        </form-bean>
    </form-beans>

    <!-- ========== Global Exceptions ======================================= -->

    <global-exceptions>
        <exception
            key="error.session.expired"
            path="login.error.layout"
            type="uk.ac.ebi.intact.application.editor.exception.SessionExpiredException"/>

        <!-- Failure to search the database -->
        <exception
            handler="uk.ac.ebi.intact.application.editor.struts.framework.util.EditorExceptionHandler"
            type="uk.ac.ebi.intact.application.editor.exception.SearchException"
            key="error.search"
            path="error.layout"/>
    </global-exceptions>

    <!-- ========== Global Forward Definitions ============================== -->
    <global-forwards>
        <!-- Need this global forward from the index.jsp -->
        <forward name="login" path="/do/welcome"/>
        <forward name="success" path="/do/setUpEditorForm"/>
        <forward name="failure" path="error.layout"/>
        <forward name="input" path="/do/setUpEditorForm"/>
    </global-forwards>

    <!-- ========== Action Mapping Definitions ============================== -->
    <action-mappings>

        <!-- The starting point for the application; display the login layout. -->
        <action path="/welcome"
            type="org.apache.struts.actions.ForwardAction"
            parameter="login.layout">
        </action>

        <!-- Process a user logout -->
        <action path="/logout"
            type="uk.ac.ebi.intact.application.editor.struts.security.LogoutAction">
            <forward name="success" path="/do/welcome"/>
        </action>

        <!-- Process a user logon. -->
        <action path="/login"
            type="uk.ac.ebi.intact.application.editor.struts.security.LoginAction"
            name="loginForm"
            scope="request"
            input="login.error.layout">
            <!-- Invalid user -->
            <exception key="error.invalid.user"
                type="uk.ac.ebi.intact.business.IntactException"
                path="login.error.layout"/>
            <!-- Can't connect to the datasource -->
            <exception key="error.datasource"
                type="uk.ac.ebi.intact.persistence.DataSourceException"
                path="login.error.layout"/>
            <!-- Unable to load menus from database -->
            <exception key="error.init.menu"
                type="uk.ac.ebi.intact.persistence.SearchException"
                path="login.error.layout"/>
            <forward name="failure" path="login.error.layout"/>
            <!-- Successful login; present the search page. -->
            <forward name="success" path="search.layout"/>
        </action>

        <!-- This action is called by tiles when displaying the header. The
             header is changed for editing a CV object. No forward is associated
             with this action.
        -->
        <action path="/tiles/headerSwitch"
            type="uk.ac.ebi.intact.application.editor.struts.action.util.HeaderSwitchAction">
        </action>

        <action path="/tiles/editorSwitch"
            type="uk.ac.ebi.intact.application.editor.struts.action.util.EditorSwitchAction">
        </action>

        <!-- Process an action for the sidebar. -->
        <action path="/sidebar"
            name="sidebarForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.SidebarDispatchAction"
            scope="request"
            parameter="dispatch">
            <!-- No match is found -->
            <forward name="noMatch" path="no.match.layout"/>
            <!-- Multiple results found -->
            <forward name="results" path="match.layout"/>
        </action>

        <!-- Process a new search for a Editor Object. -->
        <action path="/search/new"
            type="org.apache.struts.actions.ForwardAction"
            parameter="search.layout">
        </action>

        <!---
            NOTE: Some forms are delcared with session scope. These forms are
            created in LoginAction class (after a successful login) and saved
            in a session. This avoids creating a new form for each request.
            -->

        <!-- Process when a user selects an Editor object from a search result. -->
        <action path="/results"
            name="resultForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.ResultAction"
            scope="request">
        </action>

        <!-- ==================== Actions for setting up editors ========== -->

        <!-- Populates editor common forms. Editor specific forms are set by forwards -->
        <action path="/setUpEditorForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.SetUpEditorAction"
            scope="request">
            <forward name="biosource" path="/do/setUpBioSourceForm"/>
            <forward name="experiment" path="/do/setUpExperimentForm"/>
            <forward name="interaction" path="/do/setUpInteractionForm"/>
            <forward name="editor" path="edit.layout"/>
        </action>

        <!-- Populates the biosource form. -->
        <action path="/setUpBioSourceForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.biosrc.SetUpBioSourceAction"
            name="bioSourceForm"
            validate="false"
            scope="request">
            <forward name="editor" path="edit.layout"/>
        </action>

        <!-- Populates the experiment form. -->
        <action path="/setUpExperimentForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.experiment.SetUpExperimentAction"
            name="experimentForm"
            validate="false"
            scope="request">
            <forward name="editor" path="edit.layout"/>
        </action>

        <!-- Populates the interaction form. -->
        <action path="/setUpInteractionForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.SetUpInteractionAction"
            name="interactionForm"
            validate="false"
            scope="request">
            <forward name="editor" path="edit.layout"/>
        </action>

        <!-- Process selection of Submit, Cancel or Delete buttons from edit.jsp. We need
             the dummyForm as JavaScript uses the hidden property. dispatch property
             contains the action to take (submit/cancel/delete). If we got to this from
             a results page, then go to the results page back again else (i.e., if we got
             here from a direct search) then start a new search.
         -->
        <action path="/edit"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorDispatchAction"
            name="dummyForm"
            input="/do/setUpEditorForm"
            scope="request"
            parameter="dispatch">

            <!-- Uses the input for validation exceptions -->
            <exception
                handler="uk.ac.ebi.intact.application.editor.struts.framework.util.EditorExceptionHandler"
                type="uk.ac.ebi.intact.application.editor.exception.validation.ValidationException"
                key="dummy.key"/>

            <!-- Back to the results page as we got here from a search result -->
            <forward name="results" path="match.layout"/>
            <!-- Back to the search page. -->
            <forward name="search" path="search.layout"/>
        </action>

        <!-- Handles when the user changes the short label or the full name. -->
        <action path="/cv/info"
            type="uk.ac.ebi.intact.application.editor.struts.action.EditorInfoAction"
            name="cvInfoForm"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Handles when the user clicks on auto complete for tax id. -->
        <action path="/biosource/info"
            type="uk.ac.ebi.intact.application.editor.struts.action.biosrc.BioSourceAction"
            name="bioSourceForm"
            scope="request"
            input="/do/setUpEditorForm">
        </action>

        <!-- ==================== Actions for Experiment ================= -->

        <!-- Handles when the user clicks to save Experiment info. -->
        <action path="/experiment/info"
            type="uk.ac.ebi.intact.application.editor.struts.action.experiment.ExperimentAction"
            name="experimentForm"
            validate="true"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- ============= Action paths related to an Interaction ========= -->

        <!-- Handles when the user clicks to save Interaction info. -->
        <action path="/interaction/info"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.InteractionAction"
            name="interactionForm"
            validate="true"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Handles when the user selectes to add or hide an experiment (Interaction). -->
        <action path="/interaction/experiment"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.ExperimentAction"
            name="intExperimentForm"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Handles when the user selectes to add or hide an experiment (Interaction). -->
        <action path="/interaction/experiment/hold"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.ExperimentHoldAction"
            name="intExperimentHoldForm"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Handles when the user clicks to search an experiment in an Interaction. -->
        <action path="/interaction/experiment/search"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.ExperimentSearchAction"
            name="intExperimentSearchForm"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Handles when the user clicks to save Interaction info. -->
        <action path="/interaction/protein/edit"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.ProteinEditAction"
            name="intProteinEditForm"
            validate="true"
            input="/do/setUpEditorForm"
            scope="session">
        </action>

        <!-- Handles when the user clicks to save Interaction info. -->
        <action path="/interaction/protein/search"
            type="uk.ac.ebi.intact.application.editor.struts.action.interaction.ProteinSearchAction"
            name="intProteinSearchForm"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- ==================== Actions for Annotations ================= -->

        <!-- Adds a new comment or annotation; updates the edit contents -->
        <action path="/comment/add"
            type="uk.ac.ebi.intact.application.editor.struts.action.CommentAddAction"
            name="commentAddForm"
            validate="true"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Edits or Deletes an existing annotation. -->
        <action path="/comment/edit"
            name="commentEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.CommentEditAction"
            scope="session">
        </action>

        <!-- ==================== Actions for Xrefs ======================= -->

        <!-- Adds a new xref. -->
        <action path="/xref/add"
            type="uk.ac.ebi.intact.application.editor.struts.action.XrefAddAction"
            name="xrefAddForm"
            validate="true"
            input="/do/setUpEditorForm"
            scope="request">
        </action>

        <!-- Edits or Delete an existing xref. -->
        <action path="/xref/edit"
            name="xrefEditForm"
            type="uk.ac.ebi.intact.application.editor.struts.action.XrefEditAction"
            scope="session">
        </action>

    </action-mappings>

    <!-- ========== Message Resources Definitions =========================== -->

    <message-resources
        parameter="uk.ac.ebi.intact.application.editor.MessageResources"/>

    <!-- ========== Plug Ins Configuration ================================== -->

    <!--
        Add multiple validator resource files by setting the pathnames property
        with a comma delimitted list of resource files to load.
    -->
    <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
        <set-property property="pathnames" value="/WEB-INF/validator-rules.xml,
            /WEB-INF/validation.xml"/>
    </plug-in>

    <plug-in className="org.apache.struts.tiles.TilesPlugin">
        <set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml"/>
        <set-property property="moduleAware" value="true"/>
    </plug-in>

</struts-config>
