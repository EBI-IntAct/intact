=========
T O   D O
=========

	- have to be done
	+ currently under progress



- install Struts 1.1 and check if everything ok
  - bean:message tag send an exception :

     java.lang.IllegalStateException: getAttribute: Session already invalidated
	     at org.apache.catalina.session.StandardSession.getAttribute(StandardSession.java:942)
	     at org.apache.catalina.session.StandardSessionFacade.getAttribute(StandardSessionFacade.java:171)
	     at org.apache.catalina.session.StandardSessionFacade.getAttribute(StandardSessionFacade.java:171)
	     at org.apache.jasper.runtime.PageContextImpl.getAttribute(PageContextImpl.java:222)
	     at org.apache.struts.util.RequestUtils.retrieveUserLocale(RequestUtils.java:758)
	     at org.apache.struts.util.RequestUtils.message(RequestUtils.java:828)
	     at org.apache.struts.taglib.bean.MessageTag.doStartTag(MessageTag.java:295)
	     at org.apache.jsp.view_jsp._jspx_meth_bean_message_1(view_jsp.java:315)



+ SVG integration 
  + SVG producing (batik)
  + SVG displaying (batik, CSIRO applet)
  - SVG handling (real zoom, panning, text searching, centering via URL ...)

+ Remove all internal links in Interpro
  -> modifying the simple.xsl file to customize our displaying


- add logging facilities in the web service

+ Presents to Sugath the new architecture to generate picture !
  generate svg and the servlet build on the fly the image according to parameters (format ...)

+ Work on the SVG applet 
   - create or reuse an existing one (CSIRO, Batik) 
   - features
    - size

	Q: My applets are big and it takes much time to download (on 
	browser) when a network is slow.
	Is there any way to decrease the start up time?

	Answer: The good solution is to make a small core .jar file that
	contains part applet that is necessary to start it up (initial 
	GUI elements) and rest of classes can be loaded later when applet
	is already running. Nobody use 100 % of functionality directly 
	and will give an impression that everything is ready... :-) 
	This solution is good due to another reason also. If browser lost
	connection during loading of one big .jar file you need to start 
	everything from scratch. If it happens with our solution browser 
	will cash part of classes and it will save time for reloading!

	Usually you don?t need all the functionality of the applet at 
	once, so the applet can operate before all of its possible 
	functionality is downloaded. And .jar and .class files does get
	cached by most browsers. 

- building a script allowing to do the tedious task of managing the web service !

- Find a way to check if a web service is currently running (in the runtime)

- solve browser behaviour problem
	o Netscape, remove frames

- Tomcat jar problem :
  We have to add xercesImpl.jar (found in the WEB-INF/lib of our web application) in the 
  $CATALINA_HOME/common/lib. It was not used when the jar file was in our application directory.
  This jar is needed because org.w3c.dom.DOMErrorHandler class is used when tomcat launch our application

- checkbox with struts.
  Maybe to store the bean in the session ?!

- If an error occurs during the highlightment process,
  the error is not caught currently and so, not reported in the Struts Level.
  So the user is not warned ! It seems that no GO term are found.
  cf. HighlightProteins when it call proteinToHighlight ()




==============
   D O N E
==============


+ create then an external build.xml for hierarchView

+ interact with EGO (e.g. GOTerm.isAParent(GOTerm))
   + take over with Sugath
   + make meet Sugath and David Binns

+ take over the application with Sugath
  + overview of the application
  + how to play with the web service
  + image processing
  + highlighting process

+ Modify the SVG generation class to fit the improvement of the drawing process (GraphToImage)
  + test it !

+ no depth limit (see hhe)

- implement the option of GoHighlightmentSource to use the list of GO terms (children)

- Document the way to launch the Tomcat server by taking care to run properly a new X server in the same window
  Xvfb :2.0 &
  setenv DISPLAY :2.0
  (run Tomcat)

- Allows the web service to send error message

- update jsp/hierarchView/tulip/scripts/startService.sh with right messages
  don't speak anymore about 'Serveur' unless Bordeaux solve that problem !

- add some comments in properties files with #

- update INTACTCORE/build.xml with the description flag to make some target visible from
  ant -projecthelp

- write a proper test directory for the web service
  jsp/hierarchView/tulip/script.test

- cleaning the web.xml to avoid Tomcat exception in its startup

- Correcting the displaying if the interaction network :
	o label out of the image range

- give a meaning for each displayed GO term in the right frame.

- get a list of GO term from AC in the IntAct database

- put under CVS source code of cli, Serveur and console.

- Allow to read dinamically (in runtime) the URL of the Web Service, instead to have this hardcoded in the 
  following class :
  uk.ac.ebi.intact.application.hierarchView.business.tulip.client.generated.TulipAccessServiceLocator.java
  Maybe by reading a property file and editing the generated code !

- option of the highlightment source

