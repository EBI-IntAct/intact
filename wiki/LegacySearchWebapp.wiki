#summary Explains how to set up an instance of the legacy search webapp.
#labels Phase-Deploy

= Introduction =

Using this web application is a simple way to browse the data you have in your local database. The Legacy Search webapp is one of the original applications and has been used by !IntAct until recently.

= Installation = 

The easiest way to install and run this application (and all the applications created by the !IntAct team) is to checkout the source code and use Maven to start it.

== Requirements ==

To run your Search web application you will need:

  * Maven 2: to build the application
  * Subversion client: to checkout the code
  * Java 5 or higher installed

== Procedure ==

In order to run most of the IntAct web applications, you need to use a Maven profile. You can read more about profiles in the [http://maven.apache.org/guides/introduction/introduction-to-profiles.html Maven site].

Create a profile in the {{{~/.m2/settings.xml}}} file. Use as template the following example, but you need to change the values to use your database connection. Currently the databases supported out-of-the-box are PostgreSQL, Oracle and H2.

The two following examples of profiles are the ones that you would use the data generated by the !IntAct Kickstart project. See the GettingStarted section for more info.

{{{
<settings>
...
 <profiles>
 ...
   <profile>
        <id>intact-pg</id>
        <properties>
            <db>postgres</db>
            <db.host>localhost</db.host>
            <db.port>5432</db.port>
            <db.alias>intact-db</db.alias>
            <db.user>intact</db.user>
            <db.password>change-me</db.password>
        </properties>
   </profile>
 </profiles>
...
</settings>
}}}

Or, if using H2, for example:

{{{
<settings>
...
 <profiles>
 ...
   <profile>
        <id>intact-h2</id>
        <properties>
            <db>h2</db>
            <db.alias>file:c:/tmp-h2/intact-kickstart-db</db.alias>
            <db.user>sa</db.user>
            <db.password></db.password>
        </properties>
   </profile>
 </profiles>
 </profiles>
...
</settings>
}}}

The good thing about profiles is that you can have as many as you need in order to have much more flexibility when running the applications (for instance, having a test and a production version of a web application).

Let's now check out the code from the subversion repository:

{{{
svn checkout http://intact.googlecode.com/svn/repo/service/trunk/search/legacy/search-app
}}}

Then, get into the new directory:

{{{
cd search-app
}}}

And start the application on the fly using jetty. You will need to change the value of the _db_ argument and the profile.

{{{
mvn clean jetty:run -D db=h2 -P intact-h2
}}}

The value of the _db_ variable goes like this:

  * If using oracle, use {{{ -D db=oracle }}}
  * If using PostgreSQL, use {{{ -D db=postgres }}}
  * If using H2, use {{{ -D db=h2 }}}

And then, after the {{{-P}}} you have to specify the ID of your profile, as defined in the {{{~/.m2/settings.xml}}} file.

If the previous command works fine, you should see some logging and fetching of dependencies. The first time is ran, it will probably take much more time. You will now that it has run correctly if at the end of the log messages you see something like this:

{{{
2009-11-16 13:55:40.823::INFO:  Started SelectChannelConnector@0.0.0.0:8081
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
}}}

Now you can test the web application, by opening your browsing and using this URL:

http://localhost:8081/intact/search-app