/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:26:55
 * Time to generate: 00:19.505 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt;

import uk.ac.ebi.intact.model.*;

import com.agitar.lib.junit.AgitarTestCase;
import uk.ac.ebi.intact.model.util.CvObjectUtils;

import java.util.ArrayList;
import java.util.Collection;
import java.util.NoSuchElementException;

public class CvGoNodeAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = CvGoNode.class;

    public void testConstructor() throws Throwable {
        CvGoNode cvGoNode = new CvGoNode();
        assertEquals( "cvGoNode.xrefs.size()", 0, cvGoNode.xrefs.size() );
        assertEquals( "cvGoNode.getAliases().size()", 0, cvGoNode.getAliases().size() );
        assertEquals( "cvGoNode.getEvidences().size()", 0, cvGoNode.getEvidences().size() );
        assertEquals( "cvGoNode.getChildren().size()", 0, cvGoNode.getChildren().size() );
        assertEquals( "cvGoNode.getLeftBound()", -1L, cvGoNode.getLeftBound() );
        assertEquals( "cvGoNode.level", 0, ( ( Number ) getPrivateField( cvGoNode, "level" ) ).intValue() );
        assertEquals( "cvGoNode.annotations.size()", 0, cvGoNode.annotations.size() );
        assertEquals( "cvGoNode.getParents().size()", 0, cvGoNode.getParents().size() );
        assertEquals( "cvGoNode.references.size()", 0, cvGoNode.references.size() );
        assertEquals( "cvGoNode.getRightBound()", -1L, cvGoNode.getRightBound() );
    }

    public void testGetAllChilds() throws Throwable {
        CvGoNode cvGoNode = new CvGoNode();
        ArrayList result = ( ArrayList ) cvGoNode.getAllChilds();
        assertEquals( "cvGoNode.visited.size()", 0, ( ( Collection ) getPrivateField( cvGoNode, "visited" ) ).size() );
        assertEquals( "result.size()", 0, result.size() );
        assertEquals( "cvGoNode.level", 0, ( ( Number ) getPrivateField( cvGoNode, "level" ) ).intValue() );
    }

    public void testGetAllChildsThrowsClassCastException() throws Throwable {
        Collection children = new ArrayList( 100 );
        children.add( new CvFeatureType( new Institution( "testCvGoNodeShortLabel" ), "testCvGoNodeShortLabel" ) );
        CvGoNode cvGoNode = new CvGoNode();

        super.callPrivateMethod("uk.ac.ebi.intact.model.CvDagObject", "setChildren", new Class[]{Collection.class}, cvGoNode, new Object[]{children} );
//        cvGoNode.setChildren( children );
        try {
            cvGoNode.getAllChilds();
            fail( "Expected ClassCastException to be thrown" );
        } catch ( ClassCastException ex ) {
            assertEquals( "cvGoNode.visited.size()", 0, ( ( Collection ) getPrivateField( cvGoNode, "visited" ) ).size() );
            assertEquals( "cvGoNode.level", 1, ( ( Number ) getPrivateField( cvGoNode, "level" ) ).intValue() );
            assertEquals( "ex.getClass()", ClassCastException.class, ex.getClass() );
            assertThrownBy( CvGoNode.class, ex );
        }
    }

    public void testGetAllChildsThrowsNullPointerException() throws Throwable {
        CvGoNode cvGoNode = new CvGoNode();
        cvGoNode.addXref( new CvObjectXref( null, null, "testCvGoNodeAPrimaryId", null ) );
        try {
            cvGoNode.getAllChilds();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertEquals( "cvGoNode.visited.size()", 0, ( ( Collection ) getPrivateField( cvGoNode, "visited" ) ).size() );
            assertEquals( "ex.getMessage()", "cvObject should not be null", ex.getMessage() );
            assertThrownBy( CvObjectUtils.class, ex );
            assertEquals( "cvGoNode.level", 0, ( ( Number ) getPrivateField( cvGoNode, "level" ) ).intValue() );
        }
    }

    public void testGetGoIdThrowsNoSuchElementException() throws Throwable {
        try {
            new CvGoNode().getGoId();
            fail( "Expected NoSuchElementException to be thrown" );
        } catch ( NoSuchElementException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
        }
    }

    public void testToStringThrowsNoSuchElementException() throws Throwable {
        try {
            new CvGoNode().toString();
            fail( "Expected NoSuchElementException to be thrown" );
        } catch ( NoSuchElementException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
        }
    }
}

