Prerequisites
~~~~~~~~~~~~~~

 To install and run the intact software you must have the following installed in your
 environment (or, for the DBs, at least have access to them over the network):

 * {{{http://java.sun.com/j2se/downloads.html}Java JDK 5.0}}

 * {{{http://maven.apache.org}Maven 2.0.4}} or above (all the intact build process relies on Maven)

 * Tomcat 5.5.x

 * Either {{{http://www.postgresql.org/mirrors-ftp.html}Postgres 7.2}} or Oracle 8.1.6 (or higher)

 []

 The following environment variables should be set:

 * $CATALINA_HOME - the home directory of your tomcat installation

 * $CATALINA_OPTS - should be set with your proxy setting (needed by protein loading, and so by search)
                in the EBI, it would be set to '-DproxySet=true -DproxyHost=www-proxy.ebi.ac.uk -DproxyPort=8080'

 * $JAVA_HOME - the home directory of your JDK

 []

 Intact has been tested on both Redhat Linux 7.1, CentOS 3.2 and Windows 2000/XP running inside cygwin, and with both local and
 remote postgres databases as well as a remote oracle DB. Thus intact is based around a linux/unix environment, but if you
 have Windows then everything can still be used provided you have cygwin installed.


 For postgres 7.x:
    To allow all computer in the local network to connect to the database you have to configure the file 'pg_hba.conf'
    in your postgres directory.
    e.g:

+----------+
# Allow any user from any host with IP address 127.x.x.x to connect to database
# TYPE  DATABASE    USER        IP-ADDRESS        IP-MASK           METHOD
host    all         all         127.0.0.0         255.0.0.0         trust
+----------+

    See also http://www.postgresql.org/docs/7.x/interactive/client-authentication.html#AUTH-PG-HBA-CONF
    (replace the '7.x' in the URL with your postgres version)


Setup
~~~~~~~~~~~~~~

 [[a]] Firstly download the intact sources using subversion, with the command:

+----+
svn co https://svn.sourceforge.net/svnroot/intact/repo/current intact-current
+----+

 Then, a directory called 'intact-current' will be retrieved with the sources for the modules inside.

 [[b]] IntAct build is based on maven, and the database configuration is done using profiles. By default, IntAct comes
 with profiles for the EBI internal databases. The default profiles are:

     * ebi-test: for tests. This profile is activated by default if no profiles are provided

     * ebi-prod: for the internal production database used by the curators

     * ebi-pub: for the public production database

     * ebi-pub2: for the public alternative production database

     []

 If you need another database configuration, you can create your profile in your ~/.m2/settings.xml file:

+-----+
<settings>
   ...
   <profile>
        <id>my-profile</id>
        <properties>
            <db.host>[DATABASE HOST]</db.host>
            <db.port>[DATABASE PORT]</db.port>
            <db.alias>[DATABASE SID or NAME]</db.alias>
            <db.user>[DATABASE USER]</db.user>
            <db.password>[DATABASE PASSWORD]</db.password>

            <!-- Name of the hibernate session factory (arbitrary name), to reuse connections -->
            <sessionFactoryName>[SF_NAME]</sessionFactoryName>

            <!-- Path to the lucene index -->
            <lucene.index.directory>/path/to/index</lucene.index.directory>
        </properties>
    </profile>
<settings>
+------+

 Replace the variables between brackets [...] with your information.

 You can create the modules for oracle or for postgres. The database is defined by passing the 'db' variable
 to the maven command.

 When building some projects, tests are executed. These tests need the Institution short label to work. For the
 EBI installation, the institution name is 'ebi'.

 [[c]] For instance, if using the 'ebi-test' profile and oracle, we can execute the command like this:

+---------+
mvn -P my-profile -Ddb=oracle -Dinstitution=ebi clean install
+---------+

 If you execute this in the root directory (intact-current). All modules will be built. The artifact created for each
 module is in the 'target' folder of that module. You can just build one module by executing the maven command from the
 module directory.

 [[d]] The next step for the intact core setup is to load the database. There are sample data files in the data directory,
 and to populate your database with this data simply type

+------+
cd utils
scripts/postgres/testfill.sh 'user/pwd' <dbname> small | medium | large | onlyCV  (postgres - quotes can be omitted if no password)
+------+

 or

+-------+
cd utils
scripts/oracle/testfill.sh 'user/pwd' <dbname> small | medium | large | onlyCV (oracle)
+-------+

 "small" is for minimal tests, will need \< 5 minutes. "large" is full, real data from the Ho and Gavin experiments,
 will run ca. 30 minutes.

 You should then check your database using an appropriate tool (eg pgaccess for postgres/linux) to make sure you have the
 intact tables and that they are populated.


 [[e]] Deployment: to deploy the applications just get the resulting war file from the web application modules in the 'target'
 folder and copy them in the 'webapps' folder of your Tomcat installation.

 []

