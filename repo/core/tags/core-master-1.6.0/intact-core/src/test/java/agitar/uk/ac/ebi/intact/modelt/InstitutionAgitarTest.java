/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:27:38
 * Time to generate: 00:11.181 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt; import uk.ac.ebi.intact.model.*;

import com.agitar.lib.junit.AgitarTestCase;


public class InstitutionAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = Institution.class;

    public void testConstructor() throws Throwable {
        Institution institution = new Institution( "XXXXXXXXXXXXXXX\rXXX#  " );
        assertEquals( "institution.shortLabel", "XXXXXXXXXXXXXXX\rXXX#", institution.getShortLabel() );
    }

    public void testConstructor1() throws Throwable {
        Institution institution = new Institution( "21CharactersXXXXXXXXX" );
        assertEquals( "institution.shortLabel", "21CharactersXXXXXXXX", institution.getShortLabel() );
    }

    public void testConstructor2() throws Throwable {
        Institution institution = new Institution( "testString" );
        assertEquals( "institution.shortLabel", "testString", institution.getShortLabel() );
    }

    public void testEquals() throws Throwable {
        boolean result = new Institution( "testInstitutionShortLabel" ).equals( Boolean.FALSE );
        assertFalse( "result", result );
    }

    public void testEquals1() throws Throwable {
        boolean result = new Institution( "testInstitutionShortLabel" ).equals( new Institution( "testInstitution\rShortLabel" ) );
        assertFalse( "result", result );
    }

    public void testEquals2() throws Throwable {
        Institution institution = new Institution( "testString" );
        institution.setFullName( "testInstitutionFullName" );
        boolean result = institution.equals( new Institution( "testString" ) );
        assertFalse( "result", result );
    }

    public void testEquals3() throws Throwable {
        Institution o = new Institution( "testString" );
        o.setFullName( "testInstitutionFullName" );
        boolean result = new Institution( "testString" ).equals( o );
        assertFalse( "result", result );
    }

    public void testEquals4() throws Throwable {
        Institution institution = new Institution( "testString" );
        institution.setFullName( "testString" );
        Institution o = new Institution( "testString" );
        o.setFullName( "testString" );
        boolean result = institution.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals5() throws Throwable {
        Institution o = new Institution( "testString" );
        boolean result = new Institution( "testString" ).equals( o );
        assertTrue( "result", result );
    }

    public void testEquals6() throws Throwable {
        Institution o = new Institution( "testInstitutionShortLabel" );
        boolean result = o.equals( o );
        assertTrue( "result", result );
    }

    public void testGetFullName() throws Throwable {
        String result = new Institution( "testInstitutionShortLabel" ).getFullName();
        assertNull( "result", result );
    }

    public void testGetFullName1() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setFullName( "testInstitutionFullName" );
        String result = institution.getFullName();
        assertEquals( "result", "testInstitutionFullName", result );
    }

    public void testGetPostalAddress() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setPostalAddress( "testInstitutionPostalAddress" );
        String result = institution.getPostalAddress();
        assertEquals( "result", "testInstitutionPostalAddress", result );
    }

    public void testGetPostalAddress1() throws Throwable {
        String result = new Institution( "testInstitutionShortLabel" ).getPostalAddress();
        assertNull( "result", result );
    }

    public void testGetShortLabel() throws Throwable {
        String result = new Institution( "testInstitutionShortLabel" ).getShortLabel();
        assertEquals( "result", "testInstitutionShort", result );
    }

    public void testGetUrl() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setUrl( "testInstitutionUrl" );
        String result = institution.getUrl();
        assertEquals( "result", "testInstitutionUrl", result );
    }

    public void testGetUrl1() throws Throwable {
        String result = new Institution( "testInstitutionShortLabel" ).getUrl();
        assertNull( "result", result );
    }

    public void testHashCode() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setFullName( "testInstitutionFullName" );
        int result = institution.hashCode();
        assertEquals( "result", -1527398237, result );
        assertEquals( "institution.shortLabel", "testInstitutionShort", institution.getShortLabel() );
        assertEquals( "institution.fullName", "testInstitutionFullName", institution.getFullName());
    }

    public void testHashCode1() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        int result = institution.hashCode();
        assertEquals( "result", 749136287, result );
        assertEquals( "institution.shortLabel", "testInstitutionShort", institution.getShortLabel() );
        assertNull( "institution.fullName", institution.getFullName());
    }

    public void testSetFullName() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setFullName( "testInstitutionFullName" );
        assertEquals( "institution.fullName", "testInstitutionFullName", institution.getFullName());
    }

    public void testSetPostalAddress() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setPostalAddress( "testInstitutionPostalAddress" );
        assertEquals( "institution.postalAddress", "testInstitutionPostalAddress", institution.getPostalAddress() );
    }

    public void testSetShortLabel() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setShortLabel( "testInstitutionShortLabel" );
        assertEquals( "institution.shortLabel", "testInstitutionShortLabel", institution.getShortLabel() );
    }

    public void testSetUrl() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setUrl( "testInstitutionUrl" );
        assertEquals( "institution.url", "testInstitutionUrl", institution.getUrl() );
    }

    public void testToString() throws Throwable {
        String result = new Institution( "testInstitutionShortLabel" ).toString();
        assertEquals( "result", "ShortLabel:testInstitutionShort Fullname:null", result );
    }

    public void testConstructorThrowsIllegalArgumentException() throws Throwable {
        try {
            new Institution( "" );
            fail( "Expected IllegalArgumentException to be thrown" );
        } catch ( IllegalArgumentException ex ) {
            assertEquals( "ex.getMessage()", "Must define a short label to create an Institution!", ex.getMessage() );
            assertThrownBy( Institution.class, ex );
        }
    }

    public void testConstructorThrowsNullPointerException() throws Throwable {
        try {
            new Institution( null );
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertEquals( "ex.getMessage()", "Must define a short label to create an Institution!", ex.getMessage() );
            assertThrownBy( Institution.class, ex );
        }
    }

    public void testEqualsThrowsNullPointerException() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setShortLabel( null );
        try {
            institution.equals( new Institution( "testInstitutionShortLabel1" ) );
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Institution.class, ex );
        }
    }

    public void testHashCodeThrowsNullPointerException() throws Throwable {
        Institution institution = new Institution( "testInstitutionShortLabel" );
        institution.setShortLabel( null );
        try {
            institution.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Institution.class, ex );
            assertNull( "institution.shortLabel", institution.getShortLabel() );
            assertNull( "institution.fullName", institution.getFullName());
        }
    }
}

