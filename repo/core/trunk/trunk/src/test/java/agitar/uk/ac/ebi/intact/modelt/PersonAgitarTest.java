/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:28:17
 * Time to generate: 00:38.451 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt; import uk.ac.ebi.intact.model.*;

import com.agitar.lib.junit.AgitarTestCase;


public class PersonAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = Person.class;

    public void testConstructor() throws Throwable {
        Person person = new Person();
        assertEquals( "person.getEvidences().size()", 0, person.getEvidences().size() );
    }

    public void testEquals() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setInstitution( institution );
        person.setEmail( null );
        person.setFirstNames( "V!YSJ&>-o FY*qD(" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setFirstNames( "V!YSJ&>-o FY*qD(" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals1() throws Throwable {
        Person person = new Person();
        person.setSurName( "testString" );
        person.setEmail( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        o.setTelephone( "testPersonTelephone" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals2() throws Throwable {
        Person person = new Person();
        person.setEmail( "" );
        Person o = new Person();
        o.setEmail( "" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals3() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals4() throws Throwable {
        Person o = new Person();
        o.setFirstNames( "testString" );
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "8CDAz>g\na,zr-w^/jtIR:w=|i\rtg5$w-\t" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testString" );
        o.setInstitution( institution );
        o.setSurName( "8CDAz>g\na,zr-w^/jtIR:w=|i\rtg5$w-\t" );
        o.setEmail( null );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals5() throws Throwable {
        Person person = new Person();
        person.setInstitution( new Institution( "testPersonShortLabel" ) );
        boolean result = person.equals( new Person() );
        assertFalse( "result", result );
    }

    public void testEquals6() throws Throwable {
        Person person = new Person();
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( null );
        person.setInstitution( institution );
        person.setSurName( null );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals7() throws Throwable {
        Person person = new Person();
        person.setInstitution( new Institution( "testPersonShortLabel" ) );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals8() throws Throwable {
        Person o = new Person();
        o.setEmail( "testPersonEmail" );
        boolean result = new Person().equals( o );
        assertFalse( "result", result );
    }

    public void testEquals9() throws Throwable {
        Person person = new Person();
        person.setEmail( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setEmail( "testString" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals10() throws Throwable {
        Person person = new Person();
        person.setSurName( "testString" );
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( null );
        person.setInstitution( institution );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals11() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setFirstNames( "V!YSJ&>-o FY*qD(" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setFirstNames( "V!YSJ&>-o FY*qD(" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals12() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals13() throws Throwable {
        boolean result = new Person().equals( new Person() );
        assertTrue( "result", result );
    }

    public void testEquals14() throws Throwable {
        Person person = new Person();
        person.setEmail( null );
        person.setFirstNames( "V!YSJ&>-o FY*qD(" );
        Person o = new Person();
        o.setInstitution( new Institution( "testPersonShortLabel" ) );
        o.setFirstNames( "V!YSJ&>-o FY*qD(" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals15() throws Throwable {
        Person person = new Person();
        person.setEmail( "testString" );
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        person.setSurName( null );
        person.setFirstNames( "" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setEmail( "testString" );
        o.setFirstNames( "" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals16() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setEmail( "" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setEmail( "" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals17() throws Throwable {
        Person person = new Person();
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        person.setSurName( "testString" );
        person.setEmail( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        o.setTelephone( "testPersonTelephone" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals18() throws Throwable {
        Person o = new Person();
        o.setFirstNames( "testString" );
        o.setSurName( "testPersonSurName" );
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setFirstNames( "testString" );
        o.setInstitution( institution );
        o.setEmail( null );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals19() throws Throwable {
        Person person = new Person();
        person.setFirstNames( "testPersonFirstNames" );
        boolean result = person.equals( new Person() );
        assertFalse( "result", result );
    }

    public void testEquals20() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals21() throws Throwable {
        Person person = new Person();
        person.setEmail( "testString" );
        Person o = new Person();
        o.setEmail( "testString" );
        o.setFirstNames( "testPersonFirstNames" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals22() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testString" );
        person.setEmail( "B/7n8]s\\lcpt\nOam!=\rG?c$&/+R" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "B/7n8]s\\lcpt\nOam!=\rG?c$&/+R" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals23() throws Throwable {
        Person person = new Person();
        person.setInstitution( null );
        person.setFirstNames( null );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( new Institution( "testPersonShortLabel" ) );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals24() throws Throwable {
        Person person = new Person();
        person.setInstitution( new Institution( "testPersonShortLabel" ) );
        person.setEmail( null );
        person.setFirstNames( "V!YSJ&>-o FY*qD(" );
        Person o = new Person();
        o.setFirstNames( "V!YSJ&>-o FY*qD(" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals25() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testString" );
        person.setEmail( "testString" );
        person.setTelephone( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        o.setTelephone( "testString" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals26() throws Throwable {
        Person person = new Person();
        person.setEmail( "testPersonEmail" );
        boolean result = person.equals( new Person() );
        assertFalse( "result", result );
    }

    public void testEquals27() throws Throwable {
        Person person = new Person();
        person.setInstitution( new Institution( "testPersonShortLabel" ) );
        person.setEmail( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setEmail( "testString" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals28() throws Throwable {
        Person o = new Person();
        o.setFirstNames( "testPersonFirstNames" );
        o.setEmail( null );
        boolean result = new Person().equals( o );
        assertFalse( "result", result );
    }

    public void testEquals29() throws Throwable {
        Person person = new Person();
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        person.setSurName( "testString" );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals30() throws Throwable {
        boolean result = new Person().equals( "" );
        assertFalse( "result", result );
    }

    public void testEquals31() throws Throwable {
        Person o = new Person();
        o.setFirstNames( "testString" );
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "8CDAz>g\na,zr-w^/jtIR:w=|i\rtg5$w-\t" );
        person.setFirstNames( "testString" );
        o.setInstitution( institution );
        o.setSurName( "8CDAz>g\na,zr-w^/jtIR:w=|i\rtg5$w-\t" );
        o.setEmail( null );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals32() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testPersonSurName" );
        o.setEmail( "" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals33() throws Throwable {
        Person person = new Person();
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setFirstNames( null );
        person.setInstitution( institution );
        person.setSurName( null );
        person.setEmail( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals34() throws Throwable {
        Person person = new Person();
        person.setEmail( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setSurName( "testPersonSurName" );
        o.setEmail( "testString" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals35() throws Throwable {
        Person person = new Person();
        person.setSurName( "testString" );
        person.setEmail( "testString" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals36() throws Throwable {
        Person person = new Person();
        person.setFirstNames( "testPersonFirstNames" );
        Person o = new Person();
        person.setEmail( "testString" );
        o.setEmail( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals37() throws Throwable {
        Person person = new Person();
        person.setSurName( "testString" );
        person.setTelephone( "testPersonTelephone" );
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        person.setEmail( "testString" );
        person.setFirstNames( "\u4560\u1290\u78CE\uA56C\uFFFB\u766A\u9B30\u287A\uDD1D\u9E50\uED2D\u6F86\u9000\u218C\u1478\u1897\u7EA5\uBEA8\u8801\u1261\uBA2A\u7140\uBFBF\u847E\uEB87\u6A64\uBB91\u063A" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setSurName( "testString" );
        o.setEmail( "testString" );
        o.setFirstNames( "\u4560\u1290\u78CE\uA56C\uFFFB\u766A\u9B30\u287A\uDD1D\u9E50\uED2D\u6F86\u9000\u218C\u1478\u1897\u7EA5\uBEA8\u8801\u1261\uBA2A\u7140\uBFBF\u847E\uEB87\u6A64\uBB91\u063A" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals38() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testString" );
        Person o = new Person();
        o.setInstitution( institution );
        o.setEmail( "" );
        o.setFirstNames( "testString" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals39() throws Throwable {
        Person o = new Person();
        o.setInstitution( new Institution( "testPersonShortLabel" ) );
        o.setEmail( "testString" );
        o.setFirstNames( "" );
        Person person = new Person();
        person.setEmail( "testString" );
        person.setFirstNames( "" );
        boolean result = person.equals( o );
        assertFalse( "result", result );
    }

    public void testEquals40() throws Throwable {
        Person o = new Person();
        boolean result = o.equals( o );
        assertTrue( "result", result );
    }

    public void testGetInstitutionAc() throws Throwable {
        Person person = new Person();
        person.institutionAc = "testString";
        String result = person.getInstitutionAc();
        assertEquals( "result", "testString", result );
    }

    public void testGetInstitutionAc1() throws Throwable {
        String result = new Person().getInstitutionAc();
        assertNull( "result", result );
    }

    public void testHashCode() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", -393286600, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode1() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", 544800116, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode2() throws Throwable {
        Person person = new Person();
        person.setFirstNames( "testPersonFirstNames" );
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        int result = person.hashCode();
        assertEquals( "result", 1508633751, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode3() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setTelephone( "testPersonTelephone" );
        int result = person.hashCode();
        assertEquals( "result", 1356312745, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode4() throws Throwable {
        Person person = new Person();
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", -497020684, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode5() throws Throwable {
        Person person = new Person();
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        int result = person.hashCode();
        assertEquals( "result", -851723258, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode6() throws Throwable {
        Person person = new Person();
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", 1693644693, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode7() throws Throwable {
        Person person = new Person();
        person.setEmail( "testPersonEmail" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", 441066032, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode8() throws Throwable {
        Person person = new Person();
        person.setFirstNames( "testPersonFirstNames" );
        person.setSurName( "testPersonSurName" );
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        person.setTelephone( null );
        person.setEmail( null );
        int result = person.hashCode();
        assertEquals( "result", 1612367835, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode9() throws Throwable {
        Person person = new Person();
        int result = person.hashCode();
        assertEquals( "result", 0, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode10() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        int result = person.hashCode();
        assertEquals( "result", -933000116, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode11() throws Throwable {
        Person person = new Person();
        person.setFirstNames( "testPersonFirstNames" );
        person.setEmail( null );
        person.setSurName( null );
        person.setInstitution( null );
        int result = person.hashCode();
        assertEquals( "result", -1749599345, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode12() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        int result = person.hashCode();
        assertEquals( "result", -747989174, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode13() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", -491934084, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode14() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setTelephone( "testPersonTelephone" );
        int result = person.hashCode();
        assertEquals( "result", 215844461, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode15() throws Throwable {
        Person person = new Person();
        person.setEmail( "testPersonEmail" );
        int result = person.hashCode();
        assertEquals( "result", -2104301919, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode16() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        int result = person.hashCode();
        assertEquals( "result", 1257665261, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode17() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        int result = person.hashCode();
        assertEquals( "result", 103734084, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode18() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "testPersonEmail" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", -595668168, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode19() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setTelephone( "testPersonTelephone" );
        int result = person.hashCode();
        assertEquals( "result", 319578545, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode20() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        int result = person.hashCode();
        assertEquals( "result", -1888457458, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode21() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "testPersonEmail" );
        int result = person.hashCode();
        assertEquals( "result", 1153931177, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode22() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        int result = person.hashCode();
        assertEquals( "result", -2000567835, result );
        assertNull( "person.getFirstNames()", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode23() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", -1645865261, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertNull( "person.getTelephone()", person.getTelephone() );
    }

    public void testHashCode24() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", -1430020800, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertNull( "person.getEmail()", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode25() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", 760644577, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode26() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", 1797378777, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertNull( "person.getInstitution()", person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testHashCode27() throws Throwable {
        Institution institution = new Institution( "testPersonShortLabel" );
        Person person = new Person();
        person.setInstitution( institution );
        person.setEmail( "testPersonEmail" );
        person.setTelephone( "testPersonTelephone" );
        person.setFirstNames( "testPersonFirstNames" );
        int result = person.hashCode();
        assertEquals( "result", 656910493, result );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
        assertNull( "person.getSurName()", person.getSurName() );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }

    public void testSetEmail() throws Throwable {
        Person person = new Person();
        person.setEmail( "testPersonEmail" );
        assertEquals( "person.getEmail()", "testPersonEmail", person.getEmail() );
    }

    public void testSetFirstNames() throws Throwable {
        Person person = new Person();
        person.setFirstNames( "testPersonFirstNames" );
        assertEquals( "person.getFirstNames()", "testPersonFirstNames", person.getFirstNames() );
    }

    public void testSetInstitution() throws Throwable {
        Person person = new Person();
        Institution institution = new Institution( "testPersonShortLabel" );
        person.setInstitution( institution );
        assertSame( "person.getInstitution()", institution, person.getInstitution() );
    }

    public void testSetInstitutionAc() throws Throwable {
        Person person = new Person();
        person.setInstitutionAc( "testPersonAc" );
        assertEquals( "person.institutionAc", "testPersonAc", person.institutionAc );
    }

    public void testSetSurName() throws Throwable {
        Person person = new Person();
        person.setSurName( "testPersonSurName" );
        assertEquals( "person.getSurName()", "testPersonSurName", person.getSurName() );
    }

    public void testSetTelephone() throws Throwable {
        Person person = new Person();
        person.setTelephone( "testPersonTelephone" );
        assertEquals( "person.getTelephone()", "testPersonTelephone", person.getTelephone() );
    }
}

