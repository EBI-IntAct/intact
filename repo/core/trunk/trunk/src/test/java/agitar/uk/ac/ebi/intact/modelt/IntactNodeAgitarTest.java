/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:22:59
 * Time to generate: 00:12.507 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt; import uk.ac.ebi.intact.model.*;


import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;

import java.sql.Timestamp;

public class IntactNodeAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = IntactNode.class;

    public void testConstructor() throws Throwable {
        IntactNode intactNode = new IntactNode();
        assertEquals( "intactNode.getLastProvidedDate().getNanos()", 0, intactNode.getLastProvidedDate().getNanos() );
        assertEquals( "intactNode.getEvidences().size()", 0, intactNode.getEvidences().size() );
        assertEquals( "intactNode.getRejected()", 0, intactNode.getRejected() );
    }

    public void testSetFtpAddress() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setFtpAddress( "testIntactNodeFtpAddress" );
        assertEquals( "intactNode.getFtpAddress()", "testIntactNodeFtpAddress", intactNode.getFtpAddress() );
    }

    public void testSetFtpDirectory() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setFtpDirectory( "testIntactNodeFtpDirectory" );
        assertEquals( "intactNode.getFtpDirectory()", "testIntactNodeFtpDirectory", intactNode.getFtpDirectory() );
    }

    public void testSetFtpLogin() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setFtpLogin( "testIntactNodeFtpLogin" );
        assertEquals( "intactNode.getFtpLogin()", "testIntactNodeFtpLogin", intactNode.getFtpLogin() );
    }

    public void testSetFtpPassword() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setFtpPassword( "testIntactNodeFtpPassword" );
        assertEquals( "intactNode.getFtpPassword()", "testIntactNodeFtpPassword", intactNode.getFtpPassword() );
    }

    public void testSetLastCheckId() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setLastCheckId( 100 );
        assertEquals( "intactNode.getLastCheckId()", 100, intactNode.getLastCheckId() );
    }

    public void testSetLastProvidedDate() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Timestamp lastProvidedDate = new Timestamp( 100L );
        Mockingbird.enterTestMode();
        intactNode.setLastProvidedDate( lastProvidedDate );
        assertSame( "intactNode.getLastProvidedDate()", lastProvidedDate, intactNode.getLastProvidedDate() );
    }

    public void testSetLastProvidedId() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setLastProvidedId( 100 );
        assertEquals( "intactNode.getLastProvidedId()", 100, intactNode.getLastProvidedId() );
    }

    public void testSetOwnerPrefix() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setOwnerPrefix( "testIntactNodeOwnerPrefix" );
        assertEquals( "intactNode.getOwnerPrefix()", "testIntactNodeOwnerPrefix", intactNode.getOwnerPrefix() );
    }

    public void testSetRejected() throws Throwable {
        IntactNode intactNode = new IntactNode();
        Mockingbird.enterTestMode();
        intactNode.setRejected( 100 );
        assertEquals( "intactNode.getRejected()", 100, intactNode.getRejected() );
    }
}

