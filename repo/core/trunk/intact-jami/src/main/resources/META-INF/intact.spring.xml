<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- only scan annotations in this package -->
    <context:component-scan base-package="uk.ac.ebi.intact.jami"/>

    <!-- so the @Transactional annotations work -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--
        Post-processor to perform exception translation on @Repository classes
        (from native exceptions such as JPA PersistenceExceptions to
        Spring&rsquo;s DataAccessException hierarchy).
    -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <!--  BeanPostProcessor that processes PersistenceUnit and PersistenceContext annotations,
    for injection of the corresponding JPA resources EntityManagerFactory and EntityManager.
    Any such annotated fields or methods in any Spring-managed object will automatically be injected.
    This post-processor will inject sub-interfaces of EntityManagerFactory and EntityManager if the annotated
    fields or methods are declared as such. The actual type will be verified early, with the exception of
    a shared ("transactional") EntityManager reference, where type mismatches might be detected as late as on
    the first actual invocation. -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- JPATransactionManager is not dependent on hibernate. It is a more global platform -->
    <!-- We use entity manager because it is JPA and not just specific to hibernate -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="intactCoreDataSource"/>
    </bean>
    <!-- The LocalContainerEntityManagerFactoryBean gives full control over EntityManagerFactory configuration
    and is appropriate for environments where fine-grained customization is required-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="intact-core"/>
        <property name="dataSource" ref="intactCoreDataSource"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">${db.hbm2ddl}</prop>
            </props>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${db.platform}"/>
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="false"/>
            </bean>
        </property>
    </bean>
    <!-- Intact core basic datasource -->
    <bean id="intactCoreDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
    </bean>
    <!-- Intact core basic datasource for testing -->
    <bean id="intactCoreDataSourceTest" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:intactcore;DB_CLOSE_DELAY=-1;LOCK_MODE=0"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!-- INTACT more specific beans -->
    <bean id="userContext" class="uk.ac.ebi.intact.jami.model.context.UserContext">
        <property name="userId" value="${user.context.id}"/>
    </bean>

    <bean id="intactConfig" class="uk.ac.ebi.intact.jami.model.context.IntactConfiguration">
        <property name="acPrefix" value="${intact.ac.prefix}"/>
        <property name="defaultInstitution" ref="${default.institution}"/>
    </bean>

    <!-- Default institutions -->
    <bean id="institutionIntact" class="uk.ac.ebi.intact.jami.model.extension.IntactSource">
        <constructor-arg index="0" value="intact"/>
        <property name="fullName" value="European Bioinformatics Institute"/>
        <property name="MIIdentifier" value="MI:0469"/>
        <property name="url" value="http://www.ebi.ac.uk/intact/"/>
        <property name="postalAddress" value="European Bioinformatics Institute; Wellcome Trust Genome Campus; Hinxton, Cambridge; CB10 1SD; United Kingdom"/>
    </bean>

    <bean id="institutionMint" class="uk.ac.ebi.intact.jami.model.extension.IntactSource">
        <constructor-arg index="0" value="mint"/>
        <property name="fullName" value="MINT, Dpt of Biology, University of Rome Tor Vergata"/>
        <property name="MIIdentifier" value="MI:0471"/>
        <property name="url" value="http://mint.bio.uniroma2.it/mint"/>
    </bean>

    <bean id="institutionDip" class="uk.ac.ebi.intact.jami.model.extension.IntactSource">
        <constructor-arg index="0" value="dip"/>
        <property name="fullName" value="Database of Interacting Proteins"/>
        <property name="MIIdentifier" value="MI:0465"/>
        <property name="url" value="http://dip.doe-mbi.ucla.edu/"/>
        <property name="postalAddress" value="611 Young Drive East; Los Angeles CA 90095; USA"/>
    </bean>

    <bean id="institutionUndefined" class="uk.ac.ebi.intact.jami.model.extension.IntactSource">
        <constructor-arg index="0" value="unknown"/>
        <property name="fullName" value="Undefined institution"/>
    </bean>

</beans>