/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:29:26
 * Time to generate: 00:10.024 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt; import uk.ac.ebi.intact.model.*;

import com.agitar.lib.junit.AgitarTestCase;


public class PayAsYouGoPkAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = PayAsYouGoPk.class;

    public void testConstructor() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" );
        assertEquals( "payAsYouGoPk.getNid()", "testPayAsYouGoPkNid", payAsYouGoPk.getNid() );
        assertEquals( "payAsYouGoPk.getSpecies()", "testPayAsYouGoPkSpecies", payAsYouGoPk.getSpecies() );
    }

    public void testConstructor1() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk();
        assertNull( "payAsYouGoPk.getNid()", payAsYouGoPk.getNid() );
    }

    public void testEquals() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testString", "testString" );
        boolean result = payAsYouGoPk.equals( new PayAsYouGoPk( "testString", "testString" ) );
        assertTrue( "result", result );
    }

    public void testEquals1() throws Throwable {
        boolean result = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" ).equals( null );
        assertFalse( "result", result );
    }

    public void testEquals2() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testString", null );
        boolean result = payAsYouGoPk.equals( new PayAsYouGoPk( "testString", "i" ) );
        assertFalse( "result", result );
    }

    public void testEquals3() throws Throwable {
        PayAsYouGoPk o = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" );
        boolean result = o.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals4() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( null, "testString" );
        boolean result = payAsYouGoPk.equals( new PayAsYouGoPk( null, "testString" ) );
        assertTrue( "result", result );
    }

    public void testEquals5() throws Throwable {
        boolean result = new PayAsYouGoPk( null, "testPayAsYouGoPkSpecies" ).equals( new PayAsYouGoPk( "testString", "testPayAsYouGoPkSpecies1" ) );
        assertFalse( "result", result );
    }

    public void testEquals6() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testString", "testPayAsYouGoPkSpecies" );
        boolean result = payAsYouGoPk.equals( new PayAsYouGoPk( "testString", "testPayAsYouGoPkSpecies1" ) );
        assertFalse( "result", result );
    }

    public void testEquals7() throws Throwable {
        boolean result = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" ).equals( "" );
        assertFalse( "result", result );
    }

    public void testEquals8() throws Throwable {
        boolean result = new PayAsYouGoPk( null, "testPayAsYouGoPkSpecies" ).equals( new PayAsYouGoPk() );
        assertFalse( "result", result );
    }

    public void testEquals9() throws Throwable {
        boolean result = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" ).equals( new PayAsYouGoPk( "testPayAsYouGoPkNid1", "testPayAsYouGoPkSpecies1" ) );
        assertFalse( "result", result );
    }

    public void testHashCode() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testPayAsYouGoPkNid", null );
        int result = payAsYouGoPk.hashCode();
        assertEquals( "result", 69358929, result );
        assertEquals( "payAsYouGoPk.getNid()", "testPayAsYouGoPkNid", payAsYouGoPk.getNid() );
        assertNull( "payAsYouGoPk.getSpecies()", payAsYouGoPk.getSpecies() );
    }

    public void testHashCode1() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" );
        int result = payAsYouGoPk.hashCode();
        assertEquals( "result", 808875539, result );
        assertEquals( "payAsYouGoPk.getNid()", "testPayAsYouGoPkNid", payAsYouGoPk.getNid() );
        assertEquals( "payAsYouGoPk.getSpecies()", "testPayAsYouGoPkSpecies", payAsYouGoPk.getSpecies() );
    }

    public void testHashCode2() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "", null );
        int result = payAsYouGoPk.hashCode();
        assertEquals( "result", 0, result );
        assertEquals( "payAsYouGoPk.getNid()", "", payAsYouGoPk.getNid() );
        assertNull( "payAsYouGoPk.getSpecies()", payAsYouGoPk.getSpecies() );
    }

    public void testHashCode3() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk();
        int result = payAsYouGoPk.hashCode();
        assertEquals( "result", 0, result );
        assertNull( "payAsYouGoPk.getNid()", payAsYouGoPk.getNid() );
        assertNull( "payAsYouGoPk.getSpecies()", payAsYouGoPk.getSpecies() );
    }

    public void testHashCode4() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( null, "testPayAsYouGoPkSpecies" );
        int result = payAsYouGoPk.hashCode();
        assertEquals( "result", 739516610, result );
        assertNull( "payAsYouGoPk.getNid()", payAsYouGoPk.getNid() );
        assertEquals( "payAsYouGoPk.getSpecies()", "testPayAsYouGoPkSpecies", payAsYouGoPk.getSpecies() );
    }

    public void testSetNid() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" );
        payAsYouGoPk.setNid( "testPayAsYouGoPkNid" );
        assertEquals( "payAsYouGoPk.getNid()", "testPayAsYouGoPkNid", payAsYouGoPk.getNid() );
    }

    public void testSetSpecies() throws Throwable {
        PayAsYouGoPk payAsYouGoPk = new PayAsYouGoPk( "testPayAsYouGoPkNid", "testPayAsYouGoPkSpecies" );
        payAsYouGoPk.setSpecies( "testPayAsYouGoPkSpecies" );
        assertEquals( "payAsYouGoPk.getSpecies()", "testPayAsYouGoPkSpecies", payAsYouGoPk.getSpecies() );
    }
}

