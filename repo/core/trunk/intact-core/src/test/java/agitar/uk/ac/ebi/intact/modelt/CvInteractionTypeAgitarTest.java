/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:30:00
 * Time to generate: 00:07.607 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt; import uk.ac.ebi.intact.model.*;

import com.agitar.lib.junit.AgitarTestCase;
import uk.ac.ebi.intact.model.util.AnnotatedObjectUtils;

public class CvInteractionTypeAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = CvInteractionType.class;

    public void testConstructor() throws Throwable {
        Institution owner = new Institution( "testCvInteractionTypeShortLabel" );
        CvInteractionType cvInteractionType = new CvInteractionType( owner, "testCvInteractionTypeShortLabel" );
        assertEquals( "cvInteractionType.xrefs.size()", 0, cvInteractionType.xrefs.size() );
        assertEquals( "cvInteractionType.getAliases().size()", 0, cvInteractionType.getAliases().size() );
        assertEquals( "cvInteractionType.getEvidences().size()", 0, cvInteractionType.getEvidences().size() );
        assertEquals( "cvInteractionType.shortLabel", "testCvInteractionTyp", cvInteractionType.getShortLabel() );
        assertEquals( "cvInteractionType.getChildren().size()", 0, cvInteractionType.getChildren().size() );
        assertEquals( "cvInteractionType.getLeftBound()", -1L, cvInteractionType.getLeftBound() );
        assertEquals( "cvInteractionType.annotations.size()", 0, cvInteractionType.annotations.size() );
        assertEquals( "cvInteractionType.getParents().size()", 0, cvInteractionType.getParents().size() );
        assertSame( "cvInteractionType.getOwner()", owner, cvInteractionType.getOwner() );
        assertEquals( "cvInteractionType.references.size()", 0, cvInteractionType.references.size() );
        assertEquals( "cvInteractionType.getRightBound()", -1L, cvInteractionType.getRightBound() );
    }

    public void testConstructorThrowsIllegalArgumentException() throws Throwable {
        try {
            new CvInteractionType( new Institution( "testCvInteractionTypeShortLabel" ), "" );
            fail( "Expected IllegalArgumentException to be thrown" );
        } catch ( IllegalArgumentException ex ) {
            assertEquals( "ex.getMessage()", "Must define a non empty short label", ex.getMessage() );
            assertThrownBy( AnnotatedObjectUtils.class, ex );
        }
    }

    public void testConstructorThrowsNullPointerException() throws Throwable {
        try {
            new CvInteractionType( new Institution( "testCvInteractionTypeShortLabel" ), null );
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertEquals( "ex.getMessage()", "Must define a non null short label", ex.getMessage() );
            assertThrownBy( AnnotatedObjectUtils.class, ex );
        }
    }
}

