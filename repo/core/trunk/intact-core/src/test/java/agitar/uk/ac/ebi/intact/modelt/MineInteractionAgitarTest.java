/**
 * Generated by Agitar build: Agitator Version 1.0.4.000276 (Build date: Mar 27, 2007) [1.0.4.000276]
 * JDK Version: 1.5.0_09
 *
 * Generated on 04-Apr-2007 08:24:03
 * Time to generate: 00:52.306 seconds
 *
 */

package agitar.uk.ac.ebi.intact.modelt; import uk.ac.ebi.intact.model.*;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;

import java.util.ArrayList;

public class MineInteractionAgitarTest extends AgitarTestCase {

    static Class TARGET_CLASS = MineInteraction.class;

    public void testConstructor() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        assertNull( "mineInteraction.getInteractionAc()", mineInteraction.getInteractionAc() );
    }

    public void testConstructor1() throws Throwable {
        ProteinImpl protein1 = new ProteinImpl( new Institution( "testMineLabel1" ), new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ), "testMineLabel" );
        InteractionImpl interaction = new InteractionImpl( new ArrayList( 100 ), new ArrayList( 1000 ), ( CvInteractionType ) null, "testMineLabel", new Institution( "testMineLabel2" ) );
        MineInteraction mineInteraction = new MineInteraction( protein1, protein1, interaction );
        assertSame( "mineInteraction.getPk().getInteraction()", interaction, mineInteraction.getPk().getInteraction() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel", mineInteraction.getShortLabel2() );
    }

    public void testEquals() throws Throwable {
        MineInteraction o = new MineInteraction();
        o.setWeight( -1.0 );
        boolean result = new MineInteraction().equals( o );
        assertFalse( "result", result );
    }

    public void testEquals1() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPk( pk );
        MineInteraction o = new MineInteraction();
        o.setPk( pk );
        boolean result = mineInteraction.equals( o );
        assertTrue( "result", result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
    }

    public void testEquals2() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setGraphId( 48 );
        mineInteraction.setPk( pk );
        MineInteraction o = new MineInteraction();
        o.setGraphId( 48 );
        o.setPk( pk );
        boolean result = mineInteraction.equals( o );
        assertFalse( "result", result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testEquals3() throws Throwable {
        boolean result = new MineInteraction().equals( new MineInteraction() );
        assertTrue( "result", result );
    }

    public void testEquals4() throws Throwable {
        MineInteraction o = new MineInteraction();
        o.setPubmedId( "testMineInteractionPubmedId" );
        boolean result = new MineInteraction().equals( o );
        assertFalse( "result", result );
    }

    public void testEquals5() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setWeight( -1.0 );
        mineInteraction.setGraphId( 48 );
        mineInteraction.setPk( pk );
        MineInteraction o = new MineInteraction();
        o.setGraphId( 48 );
        o.setPk( pk );
        boolean result = mineInteraction.equals( o );
        assertFalse( "result", result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
    }

    public void testEquals6() throws Throwable {
        MineInteraction o = new MineInteraction();
        o.setShortLabel2( "testMineLabel2" );
        boolean result = new MineInteraction().equals( o );
        assertFalse( "result", result );
    }

    public void testEquals7() throws Throwable {
        boolean result = new MineInteraction().equals( "" );
        assertFalse( "result", result );
    }

    public void testEquals8() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPk( pk );
        boolean result = mineInteraction.equals( new MineInteraction() );
        assertFalse( "result", result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
    }

    public void testEquals9() throws Throwable {
        MineInteraction o = new MineInteraction();
        boolean result = o.equals( o );
        assertTrue( "result", result );
    }

    public void testEquals10() throws Throwable {
        boolean result = new MineInteraction().equals( null );
        assertFalse( "result", result );
    }

    public void testEquals11() throws Throwable {
        MineInteraction o = new MineInteraction();
        o.setGraphId( 100 );
        boolean result = new MineInteraction().equals( o );
        assertFalse( "result", result );
    }

    public void testEquals12() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setGraphId( 100 );
        mineInteraction.setPk( pk );
        MineInteraction o = new MineInteraction();
        o.setPk( pk );
        boolean result = mineInteraction.equals( o );
        assertFalse( "result", result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
    }

    public void testHashCode() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -572493819, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode1() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1150881665, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode2() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1185624679, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode3() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 0, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode4() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel1( "testMineLabel1" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1758118498, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode5() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 334767898, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode6() throws Throwable {
        Experiment experiment = new Experiment( new Institution( "testMineLabel1" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel2" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 820324970, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode8() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1520392577, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode9() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setDetectionMethod( detectionMethod );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -816113767, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode10() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1016456221, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode11() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1385967133, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode12() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1958460952, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode13() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -816113767, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode14() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1520392577, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode17() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1150881665, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode18() throws Throwable {
        BioSource source = new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" );
        ProteinImpl protein2 = new ProteinImpl( new Institution( "testMineLabel1" ), source, "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMine2Interaction" ), "testMineLabel", source );
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMine3Interaction" ), "testMineLabel" );
        MineInteractionPk pk = new MineInteractionPk( null, protein2, new InteractionImpl( new ArrayList( 100 ), ( CvInteractionType ) null, new CvInteractorType( new Institution( "testMineLabel2" ), "testMineLabel" ), "testMineLabel", new Institution( "testMine2Label" ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 2112743492, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode19() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1758118498, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode20() throws Throwable {
        BioSource source = new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" );
        ProteinImpl protein2 = new ProteinImpl( new Institution( "testMineLabel1" ), source, "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMine2Interaction" ), "testMineLabel", source );
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMine3Interaction" ), "testMineLabel" );
        MineInteractionPk pk = new MineInteractionPk( null, protein2, new InteractionImpl( new ArrayList( 100 ), ( CvInteractionType ) null, new CvInteractorType( new Institution( "testMineLabel2" ), "testMineLabel" ), "testMineLabel", new Institution( "testMine2Label" ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -458848320, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode21() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1388607586, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode22() throws Throwable {
        BioSource source = new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" );
        ProteinImpl protein2 = new ProteinImpl( new Institution( "testMineLabel1" ), source, "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMine2Interaction" ), "testMineLabel", source );
        MineInteractionPk pk = new MineInteractionPk( null, protein2, new InteractionImpl( new ArrayList( 100 ), ( CvInteractionType ) null, new CvInteractorType( new Institution( "testMineLabel2" ), "testMineLabel" ), "testMineLabel", new Institution( "testMine2Label" ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1542890126, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode23() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        int result = mineInteraction.hashCode();
        assertEquals( "result", 0, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode24() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 423527679, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode25() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -200342454, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode26() throws Throwable {
        BioSource source = new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" );
        ProteinImpl protein2 = new ProteinImpl( new Institution( "testMineLabel1" ), source, "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMine2Interaction" ), "testMineLabel", source );
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMine3Interaction" ), "testMineLabel" );
        MineInteractionPk pk = new MineInteractionPk( null, protein2, new InteractionImpl( new ArrayList( 100 ), ( CvInteractionType ) null, new CvInteractorType( new Institution( "testMineLabel2" ), "testMineLabel" ), "testMineLabel", new Institution( "testMine2Label" ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 726776359, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode27() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel1" ), "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMineLabel2" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1392818789, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode28() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -572493819, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode29() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -149077528, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode30() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -2062056193, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode31() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -2062056193, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode32() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel1" ), "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMineLabel2" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setExperiment( experiment );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1092765083, result );
        assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode33() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -676089060, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode34() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1047286424, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode35() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 1989291155, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode36() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel1" ), "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMineLabel2" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 820213582, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode37() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -303937695, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
        assertNull( "mineInteraction.getExperiment()", mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode38() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel1" ), "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMineLabel2" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -1092765083, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testHashCode39() throws Throwable {
        Experiment experiment = new Experiment( new Institution( "testMineLabel1" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", -276651316, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
        assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
    }

    public void testHashCode40() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel1" ), "testMineLabel" );
        Experiment experiment = new Experiment( new Institution( "testMineLabel2" ), "testMineLabel", new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ) );
        MineInteractionPk pk = new MineInteractionPk();
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        mineInteraction.setDetectionMethod( detectionMethod );
        mineInteraction.setWeight( 100.0 );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setPk( pk );
        int result = mineInteraction.hashCode();
        assertEquals( "result", 293202050, result );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
        assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
        assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
        assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testSetDetectionMethod() throws Throwable {
        CvInteraction detectionMethod = new CvInteraction( new Institution( "testMineLabel" ), "testMineLabel" );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setDetectionMethod( detectionMethod );
        assertSame( "mineInteraction.getDetectionMethod()", detectionMethod, mineInteraction.getDetectionMethod() );
    }

    public void testSetExperiment() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        Experiment experiment = ( Experiment ) Mockingbird.getProxyObject( Experiment.class );
        Mockingbird.enterTestMode();
        mineInteraction.setExperiment( experiment );
        assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
    }

    public void testSetGraphId() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setGraphId( 100 );
        assertEquals( "mineInteraction.getGraphId()", 100, mineInteraction.getGraphId() );
    }

    public void testSetInteractionAc() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setInteractionAc( "testMineInteractionInteractionAc" );
        assertEquals( "mineInteraction.getInteractionAc()", "testMineInteractionInteractionAc", mineInteraction.getInteractionAc() );
    }

    public void testSetPk() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        MineInteractionPk pk = new MineInteractionPk();
        mineInteraction.setPk( pk );
        assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
    }

    public void testSetProtein1Ac() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setProtein1Ac( "testMineInteractionProtein1Ac" );
        assertEquals( "mineInteraction.getProtein1Ac()", "testMineInteractionProtein1Ac", mineInteraction.getProtein1Ac() );
    }

    public void testSetProtein2Ac() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setProtein2Ac( "testMineInteractionProtein2Ac" );
        assertEquals( "mineInteraction.getProtein2Ac()", "testMineInteractionProtein2Ac", mineInteraction.getProtein2Ac() );
    }

    public void testSetPubmedId() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setPubmedId( "testMineInteractionPubmedId" );
        assertEquals( "mineInteraction.getPubmedId()", "testMineInteractionPubmedId", mineInteraction.getPubmedId() );
    }

    public void testSetShortLabel1() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel1( "testMineLabel1" );
        assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
    }

    public void testSetShortLabel2() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
    }

    public void testSetTaxid() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
    }

    public void testSetWeight() throws Throwable {
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setWeight( 100.0 );
        assertEquals( "mineInteraction.getWeight()", 100.0, mineInteraction.getWeight(), 1.0E-6 );
    }

//    public void testConstructorThrowsNullPointerException() throws Throwable {
//        ProteinImpl protein1 = ( ProteinImpl ) Mockingbird.getProxyObject( ProteinImpl.class );
//        InteractionImpl interaction = ( InteractionImpl ) Mockingbird.getProxyObject( InteractionImpl.class );
//        Mockingbird.enterRecordingMode();
//        Mockingbird.setReturnValue( protein1.getShortLabel(), "testString" );
//        Mockingbird.enterTestMode();
//        try {
//            new MineInteraction( protein1, null, interaction );
//            fail( "Expected NullPointerException to be thrown" );
//        } catch ( NullPointerException ex ) {
//            assertNull( "ex.getMessage()", ex.getMessage() );
//            assertThrownBy( MineInteraction.class, ex );
//            assertInvoked( protein1, "getShortLabel" );
//        }
//    }

    public void testConstructorThrowsNullPointerException1() throws Throwable {
        try {
            new MineInteraction( null, new ProteinImpl( new Institution( "testMineLabel1" ), new BioSource( new Institution( "testMineLabel" ), "testMineLabel", "-68833" ), "testMineLabel" ), new InteractionImpl( new ArrayList( 100 ), null, "testMineLabel", new Institution( "testMineLabel2" ) ) );
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( MineInteraction.class, ex );
        }
    }

    public void testHashCodeThrowsNullPointerException() throws Throwable {
        Experiment experiment = new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
            assertNull( "mineInteraction.getTaxid()", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
            assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }

    public void testHashCodeThrowsNullPointerException1() throws Throwable {
        Experiment experiment = new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
            assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
            assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }

    public void testHashCodeThrowsNullPointerException2() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        Experiment experiment = Experiment.getShallowCopy( Experiment.getShallowCopy( new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
            assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
            assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }

    public void testHashCodeThrowsNullPointerException3() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        Experiment experiment = Experiment.getShallowCopy( Experiment.getShallowCopy( new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
            assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
            assertNull( "mineInteraction.getShortLabel2()", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }

    public void testHashCodeThrowsNullPointerException4() throws Throwable {
        Experiment experiment = new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
            assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
            assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }

    public void testHashCodeThrowsNullPointerException5() throws Throwable {
        Experiment experiment = new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertNull( "mineInteraction.getPk()", mineInteraction.getPk() );
            assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertNull( "mineInteraction.getShortLabel1()", mineInteraction.getShortLabel1() );
            assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }

    public void testHashCodeThrowsNullPointerException6() throws Throwable {
        MineInteractionPk pk = new MineInteractionPk();
        Experiment experiment = Experiment.getShallowCopy( Experiment.getShallowCopy( new Experiment( new Institution( "testMineLabel" ), "testMineLabel", null ) ) );
        MineInteraction mineInteraction = new MineInteraction();
        mineInteraction.setShortLabel2( "testMineLabel2" );
        mineInteraction.setExperiment( experiment );
        mineInteraction.setShortLabel1( "testMineLabel1" );
        mineInteraction.setTaxid( "testMineInteractionTaxid" );
        mineInteraction.setPk( pk );
        try {
            mineInteraction.hashCode();
            fail( "Expected NullPointerException to be thrown" );
        } catch ( NullPointerException ex ) {
            assertNull( "ex.getMessage()", ex.getMessage() );
            assertThrownBy( Experiment.class, ex );
            assertSame( "mineInteraction.getPk()", pk, mineInteraction.getPk() );
            assertEquals( "mineInteraction.getTaxid()", "testMineInteractionTaxid", mineInteraction.getTaxid() );
            assertNull( "mineInteraction.getPubmedId()", mineInteraction.getPubmedId() );
            assertEquals( "mineInteraction.getShortLabel1()", "testMineLabel1", mineInteraction.getShortLabel1() );
            assertEquals( "mineInteraction.getShortLabel2()", "testMineLabel2", mineInteraction.getShortLabel2() );
            assertSame( "mineInteraction.getExperiment()", experiment, mineInteraction.getExperiment() );
            assertNull( "mineInteraction.getDetectionMethod()", mineInteraction.getDetectionMethod() );
        }
    }
}

