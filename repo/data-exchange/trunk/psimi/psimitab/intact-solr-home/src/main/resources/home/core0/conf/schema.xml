<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default)
 or located where the classloader for the Solr webapp can find server.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 NOTE: this schema includes many optional features and should not
 be used for benchmarking.
-->

<schema name="interactions" version="1.5">
    <!-- attribute "interactions" is the name of this schema and is only used for display purposes.
Applications should change this to reflect the nature of the search collection.
version="1.1" is Solr's version number for the schema syntax and semantics.  It should
not normally be changed by applications.
1.0: multiValued attribute did not exist, all fields are multiValued by nature
1.1: multiValued attribute introduced, false by default -->

    <types>
        <!-- field type definitions. The "name" attribute is
           just a label to be used by field definitions.  The "class"
           attribute and any other attributes determine the real
           behavior of the fieldType.
             Class names starting with "solr" refer to java classes in the
           org.apache.solr.analysis package.
        -->

        <!-- The StrField type is not analyzed, but indexed/stored verbatim.
           - StrField and TextField support an optional compressThreshold which
           limits compression (if enabled in the derived fields) to values which
           exceed a certain size (in characters).
        -->
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

        <!-- The optional sortMissingLast and sortMissingFirst attributes are
             currently supported on types that are sorted internally as strings.
           - If sortMissingLast="true", then a sort on this field will cause documents
             without the field to come after documents with the field,
             regardless of the requested sort order (asc or desc).
           - If sortMissingFirst="true", then a sort on this field will cause documents
             without the field to come before documents with the field,
             regardless of the requested sort order.
           - If sortMissingLast="false" and sortMissingFirst="false" (the default),
             then default lucene sorting will be used which places docs without the
             field first in an ascending sort and last in a descending sort.
        -->

        <!-- Less flexible matching, even less than the text tight below, as we are not stemming. This is the old type used by Intact which is not compatible with psicquic -->
        <fieldType name="oldTextIntact" class="solr.TextField" positionIncrementGap="100" >
            <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>
        <!-- This is the new type used by Intact which is compatible with psicquic -->
        <fieldType name="textIntact" class="solr.TextField" positionIncrementGap="100" indexed="true" stored="false" omitNorms="true" termVectors="true" required="true" multiValued="true">
            <analyzer>
                <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="[\(\)]" replacement=""/> <!-- replace brakets -->
                <tokenizer 	class="solr.WhitespaceTokenizerFactory"/>
                <filter	class="solr.TrimFilterFactory"/> <!--  trim white spaces at the beginning and end of the words -->
                <filter	class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory"/> <!--  discards common english stop words: "a", "an", ... -->
            </analyzer>
        </fieldType>

        <!-- unique identifier
        -->
        <fieldtype name="intactUuid" stored="true" indexed="true" class="solr.UUIDField" required="true"/>
        <!-- miql fields that are not stored and not indexed
        -->
        <fieldType name="intactDummyField" 			class="solr.StrField"  		sortMissingLast="true" indexed="false" stored="false" multiValued="true"/>
        <!-- miql fields that will be integer
        -->
        <fieldType name="intIntact"					class="solr.TrieIntField" 	indexed="true" stored="false" precisionStep="0" positionIncrementGap="0" multiValued="false" required="true"/>
        <!-- miql fields that will be boolean
        -->
        <fieldType name="booleanIntact" 				class="solr.BoolField" 		indexed="true" stored="false" multiValued="false" required="true"/>
        <!-- score fields that will be double
        -->
        <fieldType name="doubleIntact" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false"/>
        <!-- The StrField type is not analyzed, but indexed/stored verbatim.
           - StrField and TextField support an optional compressThreshold which
           limits compression (if enabled in the derived fields) to values which
           exceed a certain size (in characters).
        -->
        <fieldType name="stringIntact" class="solr.StrField" sortMissingLast="true" omitNorms="true" indexed="true" stored="false" multiValued="true"/>

        <fieldType name="intactIndexedUnstoredString" class="solr.StrField"  		sortMissingLast="true" indexed="true" stored="false" omitNorms="true"  multiValued="true" required="true"/>
        <fieldType name="intactUnindexedStoredString" class="solr.StrField"  		sortMissingLast="true" indexed="false" stored="true" omitNorms="true" multiValued="false" required="true"/>
    </types>


    <fields>
        <!-- Valid attributes for fields:
          name: mandatory - the name for the field
          type: mandatory - the name of a previously defined type from the <types> section
          indexed: true if this field should be indexed (searchable or sortable)
          stored: true if this field should be retrievable
          compressed: [false] if this field should be stored using gzip compression
            (this will only apply if the field type is compressable; among
            the standard field types, only TextField and StrField are)
          multiValued: true if this field may contain multiple values per document
          omitNorms: (expert) set to true to omit the norms associated with
            this field (this disables length normalization and index-time
            boosting for the field, and saves some memory).  Only full-text
            fields or fields that need an index-time boost need norms.
          termVectors: [false] set to true to store the term vector for a given field.
            When using MoreLikeThis, fields used for similarity should be stored for
            best performance.
          termPositions: Store position information with the term vector.  This will increase storage costs.
          termOffsets: Store offset information with the term vector. This will increase storage costs.
        -->

        <field name="uuId" type="intactUuid" default="NEW"/>

        <!-- IntAct -->

        <!-- MIQL 2.5 indexed and stored fields specification http://code.google.com/p/psicquic/wiki/MiqlReference-->
        <field name="idA"			type="textIntact" default="-"/>
        <field name="idB"			type="textIntact" default="-"/>
        <field name="id" 			type="textIntact" default=""/> <!-- id = idA+altA+idB+altB -->
        <field name="alias" 			type="textIntact" default=""/> <!-- alias = aliasA+aliasB -->
        <field name="identifier" 	type="textIntact" default=""/> <!-- identifier = id + alias -->
        <field name="pubauth"		type="textIntact" default="-"/>
        <field name="pubid"			type="textIntact" default="-"/>
        <field name="taxidA"			type="textIntact" default="-"/>
        <field name="taxidB"			type="textIntact" default="-"/>
        <field name="species" 		type="textIntact" default=""/> <!-- species = taxidA + taxidB -->
        <field name="type" 			type="textIntact" default="-"/>
        <field name="detmethod"		type="textIntact" default="-"/>
        <field name="interaction_id"	type="textIntact" default="-"/>

        <!-- old intact field names
  <field name="idA" type="textIntact" indexed="true" stored="true" required="true" multiValued="true"/>
  <field name="idB" type="textIntact" indexed="true" stored="true" required="true" multiValued="true"/>
  <field name="altidA" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="altidB" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="aliasA" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="aliasB" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="detmethod" type="text" indexed="true" stored="true" multiValued="true"/>
  <field name="pubauth" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="pubid" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="taxidA" type="text" indexed="true" stored="true" multiValued="true"/>
  <field name="taxidB" type="text" indexed="true" stored="true" multiValued="true"/>
  <field name="type" type="text" indexed="true" stored="true" multiValued="true"/>
  <field name="source" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="interaction_id" type="textIntact" indexed="true" stored="true" required="true" multiValued="true"/>
  <field name="confidence" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="id" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="identifier" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="altid" type="textIntact" indexed="true" stored="false" multiValued="true"/>
  <field name="alias" type="textIntact" indexed="true" stored="false" multiValued="true"/>
  <field name="taxid" type="textIntact" indexed="true" stored="true" multiValued="true"/>
  <field name="species" type="text" indexed="true" stored="true" multiValued="true"/> -->

        <!-- MIQL 2.5 dummy fields used as input for 2.5 copy fields -->
        <field name="altidA"			type="intactDummyField" default="-"/>
        <field name="altidB"			type="intactDummyField" default="-"/>
        <field name="aliasA"			type="intactDummyField" default="-"/>
        <field name="aliasB"			type="intactDummyField" default="-"/>

        <!-- MIQL 2.7 indexed and stored fields http://code.google.com/p/psicquic/wiki/MiqlReference27 -->
        <field name="complex" 		type="textIntact" 	default="-"/>
        <field name="pbioroleA" 		type="textIntact" 	default="-"/>
        <field name="pbioroleB" 		type="textIntact"		default="-"/>
        <field name="pbiorole" 		type="textIntact" 	default=""/> <!-- pbiorole = pbioroleA + pbioroleB -->
        <field name="ptypeA" 		type="textIntact" 	default="-"/>
        <field name="ptypeB" 		type="textIntact" 	default="-"/>
        <field name="ptype" 			type="textIntact" 	default=""/> <!-- ptype = ptypeA + ptypeB -->
        <field name="pxrefA" 		type="textIntact" 	default="-"/>
        <field name="pxrefB" 		type="textIntact" 	default="-"/>
        <field name="pxref" 			type="textIntact" 	default=""/> <!-- pxref = pxrefA + pxrefB -->
        <field name="xref" 			type="textIntact" 	default="-"/>
        <field name="annot" 			type="textIntact" 	default=""/>
        <field name="udate" 			type="intIntact"  	default="0"/>
        <field name="negative" 		type="booleanIntact" 	default="false"/>
        <field name="ftypeA" 		type="textIntact" 	default="-"/>
        <field name="ftypeB" 		type="textIntact" 	default="-"/>
        <field name="ftype" 			type="textIntact" 	default=""/> <!-- ftype = ftypeA + ftypeB -->
        <field name="pmethodA"		type="textIntact" 	default="-"/>
        <field name="pmethodB" 		type="textIntact" 	default="-"/>
        <field name="pmethod" 		type="textIntact" 	default=""/> <!-- pmethod = pmethodA + pmethodB -->
        <field name="stc" 			type="booleanIntact"  default="false"/>
        <field name="param" 			type="booleanIntact"  default="false"/>

        <!-- IntAct specific fields necessary for filtering external curators/institutions -->
        <field name="source" type="textIntact" default="-"/>
        <field name="intact-miscore" type="doubleIntact" default="0"/>
        <field name="geneName" type="stringIntact" default=""/>

        <!-- old IntAct Extended -->

        <!--<field name="experimentalRoleA" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="experimentalRoleB" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="experimentalRole" type="text" indexed="true" stored="false" multiValued="true"/>

        <field name="biologicalRoleA" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="biologicalRoleB" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="biologicalRole" type="text" indexed="true" stored="false" multiValued="true"/>

        <field name="propertiesA" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="propertiesB" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="properties" type="text" indexed="true" stored="true" multiValued="true"/>

        <field name="typeA" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="typeB" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="interactorType" type="text" indexed="true" stored="true" multiValued="true"/>

        <field name="hostOrganism" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="expansion" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="dataset" type="text" indexed="true" stored="true" multiValued="true"/>

        <field name="annotationA" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="annotationB" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="annotation" type="text" indexed="true" stored="false" multiValued="true"/>

        <field name="parameterA" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="parameterB" type="text" indexed="true" stored="true" multiValued="true"/>
        <field name="parameter" type="text" indexed="true" stored="false" multiValued="true"/>
        <field name="parameterInteraction" type="text" indexed="true" stored="true" multiValued="true"/>-->

        <!-- old Other -->

        <!--<field name="go" type="string" indexed="true" stored="false" multiValued="true"/>
        <field name="interpro" type="string" indexed="true" stored="false" multiValued="true"/>
        <field name="psi-mi" type="string" indexed="true" stored="false" multiValued="true"/>
        <field name="chebi" type="string" indexed="true" stored="false" multiValued="true"/>
        <field name="uniprotkb" type="string" indexed="true" stored="false" multiValued="true"/>

        <field name="rigid" type="string" indexed="true" stored="true" multiValued="false"/>

        <field name="geneName" type="string" indexed="true" stored="true" multiValued="true"/>

        <field name="relevancescore" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="evidences" type="sint" indexed="true" stored="true" multiValued="false"/>

        <field name="spell" type="textSpell" indexed="true" stored="true" multiValued="true"/>-->

        <!-- Here, default is used to create a "timestamp" field indicating
           When each document was indexed.
        -->
        <!--<field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>-->

        <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
will be used if the name matches any of the patterns.
RESTRICTION: the glob-like pattern in the name attribute must have
a "*" only at the start or the end.
EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
Longer patterns will be matched first.  if equal size patterns
both match, the first appearing in the schema will be used.  -->

        <!-- Dynamic Fields that can be used for faceting/sorting -->
        <dynamicField name="*_s"  type="intactIndexedUnstoredString" default="-"/>
        <!-- Dynamic Stored Fields that can be used for retrieving results and selecting fields -->
        <dynamicField name="*_o"  type="intactUnindexedStoredString" default="-"/>
        <!-- Dynamic Fields that can be used for retrieving an exact term. This applies to ontology terms where children are in the same field as the current term. It allows to query for the exact current term without the children -->
        <dynamicField name="*_exact" type="textIntact"  default="-"/>
        <!-- Field used to store the ACs by interactorType.
The * should correspond to an MI, in lower case and without any colon (e.g. mi0326) -->
        <dynamicField name="intact_byInteractorType_*" type="string" indexed="true" stored="true" multiValued="true" default=""/>

        <!--old dynamic fields
        <dynamicField name="*_i"  type="sint"    indexed="true"  stored="true" />
        <dynamicField name="*_s"  type="string"  indexed="true"  stored="true"/>
        <dynamicField name="*_ms"  type="string"  indexed="true"  stored="true" multiValued="true"/>
        <dynamicField name="*_l"  type="slong"   indexed="true"  stored="true"/>
        <dynamicField name="*_t"  type="text"    indexed="true"  stored="true"/>
        <dynamicField name="*_b"  type="boolean" indexed="true"  stored="true"/>
        <dynamicField name="*_f"  type="sfloat"  indexed="true"  stored="true"/>
        <dynamicField name="*_d"  type="sdouble" indexed="true"  stored="true"/>
        <dynamicField name="*_dt" type="date"    indexed="true"  stored="true"/>

        <dynamicField name="random*" type="random" />

        <dynamicField name="*_xref"  type="string"  indexed="true"  stored="true" multiValued="true"/>
        <dynamicField name="*_exact"  type="text"  indexed="true"  stored="true" multiValued="true"/>
        <dynamicField name="*_desc" type="text" indexed="true" stored="true" multiValued="true"/>
        <dynamicField name="*_desc_s" type="string" indexed="true" stored="true" multiValued="true"/>
        <dynamicField name="*_expanded"  type="text"  indexed="true"  stored="true" multiValued="true"/>
        <dynamicField name="*_expanded_id" type="string" indexed="true" stored="true" multiValued="true"/>-->

        <!-- Used to store the fields in the identifier columns, by database type (e.g.  uniprotkb_id=P12345)
        <dynamicField name="*_id"  type="string"  indexed="true"  stored="true" multiValued="true"/>-->

        <!-- uncomment the following to ignore any fields that don't already match an existing
 field name or dynamic field, rather than reporting them as an error.
 alternately, change the type="ignored" to some other type e.g. "text" if you want
 unknown fields indexed and/or stored by default -->
        <!--dynamicField name="*" type="ignored" /-->

    </fields>

    <!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a required field
    -->
    <uniqueKey>uuId</uniqueKey>

    <!-- field for the QueryParser to use when an explicit fieldname is absent. Now it is identifier and it is configured in solrconfig -->
    <!--<defaultSearchField>mitab</defaultSearchField>-->

    <!-- copyField commands copy one field to another at the time a document
is added to the index.  It's used either to index the same field differently,
or to add multiple fields to the same field for easier/faster searching.  -->

    <copyField source="idA" 		dest="id"/>
    <copyField source="idB" 		dest="id"/>
    <copyField source="altidA" 		dest="id"/>
    <copyField source="altidB" 		dest="id"/>
    <copyField source="aliasA" 	dest="alias"/>
    <copyField source="aliasB" 	dest="alias"/>
    <copyField source="idA" 		dest="identifier"/>
    <copyField source="idB" 		dest="identifier"/>
    <copyField source="altidA" 	dest="identifier"/>
    <copyField source="altidB" 	dest="identifier"/>
    <copyField source="aliasA" 	dest="identifier"/>
    <copyField source="aliasB" 	dest="identifier"/>
    <copyField source="taxidA" 	dest="species"/>
    <copyField source="taxidB" 	dest="species"/>
    <copyField source="pbioroleA" 	dest="pbiorole"/>
    <copyField source="pbioroleB" 	dest="pbiorole"/>
    <copyField source="ptypeA" 	dest="ptype"/>
    <copyField source="ptypeB" 	dest="ptype"/>
    <copyField source="pxrefA" 	dest="pxref"/>
    <copyField source="pxrefB" 	dest="pxref"/>
    <copyField source="ftypeA" 	dest="ftype"/>
    <copyField source="ftypeB" 	dest="ftype"/>
    <copyField source="pmethodA" 	dest="pmethod"/>
    <copyField source="pmethodB" 	dest="pmethod"/>

    <copyField source="idA_s" 		dest="id_s"/>
    <copyField source="idB_s" 		dest="id_s"/>
    <copyField source="altidA_s" 		dest="id_s"/>
    <copyField source="altidB_s" 		dest="id_s"/>
    <copyField source="aliasA_s" 	dest="alias_s"/>
    <copyField source="aliasB_s" 	dest="alias_s"/>
    <copyField source="idA_s" 		dest="identifier_s"/>
    <copyField source="idB_s" 		dest="identifier_s"/>
    <copyField source="altidA_s" 	dest="identifier_s"/>
    <copyField source="altidB_s" 	dest="identifier_s"/>
    <copyField source="aliasA_s" 	dest="identifier_s"/>
    <copyField source="aliasB_s" 	dest="identifier_s"/>
    <copyField source="taxidA_s" 	dest="species_s"/>
    <copyField source="taxidB_s" 	dest="species_s"/>
    <copyField source="pbioroleA_s" 	dest="pbiorole_s"/>
    <copyField source="pbioroleB_s" 	dest="pbiorole_s"/>
    <copyField source="ptypeA_s" 	dest="ptype_s"/>
    <copyField source="ptypeB_s" 	dest="ptype_s"/>
    <copyField source="pxrefA_s" 	dest="pxref_s"/>
    <copyField source="pxrefB_s" 	dest="pxref_s"/>
    <copyField source="ftypeA_s" 	dest="ftype_s"/>
    <copyField source="ftypeB_s" 	dest="ftype_s"/>
    <copyField source="pmethodA_s" 	dest="pmethod_s"/>
    <copyField source="pmethodB_s" 	dest="pmethod_s"/>

    <!-- old copyfields
    <copyField source="altidA" dest="id"/>
    <copyField source="altidB" dest="id"/>
    <copyField source="altidA" dest="altid"/>
    <copyField source="altidB" dest="altid"/>
    <copyField source="aliasA" dest="alias"/>
    <copyField source="aliasB" dest="alias"/>
    <copyField source="aliasA" dest="identifier"/>
    <copyField source="aliasB" dest="identifier"/>

    <copyField source="taxidA_exact" dest="taxidA"/>
    <copyField source="taxidA_expanded" dest="taxidA"/>
    <copyField source="taxidA_exact" dest="species"/>
    <copyField source="taxidA_expanded" dest="species"/>
    <copyField source="taxidA_exact_id" dest="species_id"/>
    <copyField source="taxidA_expanded_id" dest="species_id"/>

    <copyField source="taxidB_exact" dest="taxidB"/>
    <copyField source="taxidB_expanded" dest="taxidB"/>
    <copyField source="taxidB_exact" dest="species"/>
    <copyField source="taxidB_expanded" dest="species"/>
    <copyField source="taxidB_exact_id" dest="species_id"/>
    <copyField source="taxidB_expanded_id" dest="species_id"/>

    <copyField source="detmethod_exact" dest="detmethod"/>
    <copyField source="detmethod_expanded" dest="detmethod"/>

    <copyField source="detmethod_exact_id" dest="detmethod_id"/>
    <copyField source="detmethod_expanded_id" dest="detmethod_id"/>

    <copyField source="type_exact" dest="type"/>
    <copyField source="type_expanded" dest="type"/>

    <copyField source="type_exact_id" dest="type_id"/>
    <copyField source="type_expanded_id" dest="type_id"/>

    <copyField source="experimentalRoleA_exact" dest="experimentalRoleA"/>
    <copyField source="experimentalRoleA_expanded" dest="experimentalRoleA"/>
    <copyField source="experimentalRoleB_exact" dest="experimentalRoleB"/>
    <copyField source="experimentalRoleB_expanded" dest="experimentalRoleB"/>
    <copyField source="experimentalRoleA_exact" dest="experimentalRole"/>
    <copyField source="experimentalRoleA_expanded" dest="experimentalRole"/>
    <copyField source="experimentalRoleB_exact" dest="experimentalRole"/>
    <copyField source="experimentalRoleB_expanded" dest="experimentalRole"/>

    <copyField source="experimentalRoleA_exact_id" dest="experimentalRole_id"/>
    <copyField source="experimentalRoleA_expanded_id" dest="experimentalRole_id"/>
    <copyField source="experimentalRoleB_exact_id" dest="experimentalRole_id"/>
    <copyField source="experimentalRoleB_expanded_id" dest="experimentalRole_id"/>

    <copyField source="biologicalRoleA_exact" dest="biologicalRoleA"/>
    <copyField source="biologicalRoleA_expanded" dest="biologicalRole"/>
    <copyField source="biologicalRoleB_exact" dest="biologicalRoleB"/>
    <copyField source="biologicalRoleB_expanded" dest="biologicalRoleB"/>
    <copyField source="biologicalRoleA_exact" dest="biologicalRole"/>
    <copyField source="biologicalRoleA_expanded" dest="biologicalRole"/>
    <copyField source="biologicalRoleB_exact" dest="biologicalRole"/>
    <copyField source="biologicalRoleB_expanded" dest="biologicalRole"/>

    <copyField source="biologicalRoleA_expanded_id" dest="biologicalRole_id"/>
    <copyField source="biologicalRoleA_exact_id" dest="biologicalRole_id"/>
    <copyField source="biologicalRoleB_exact_id" dest="biologicalRole_id"/>
    <copyField source="biologicalRoleB_expanded_id" dest="biologicalRole_id"/>

    <copyField source="propertiesA_exact" dest="propertiesA"/>
    <copyField source="propertiesA_expanded" dest="propertiesA"/>
    <copyField source="propertiesB_exact" dest="propertiesB"/>
    <copyField source="propertiesB_expanded" dest="propertiesB"/>
    <copyField source="propertiesA_exact" dest="properties"/>
    <copyField source="propertiesA_expanded" dest="properties"/>
    <copyField source="propertiesB_exact" dest="properties"/>
    <copyField source="propertiesB_expanded" dest="properties"/>

    <copyField source="propertiesA_exact_id" dest="properties_id"/>
    <copyField source="propertiesA_expanded_id" dest="properties_id"/>
    <copyField source="propertiesB_exact_id" dest="properties_id"/>
    <copyField source="propertiesB_expanded_id" dest="properties_id"/>

    <copyField source="typeA_expanded" dest="typeA"/>
    <copyField source="typeA_exact" dest="typeA"/>
    <copyField source="typeB_expanded" dest="typeB"/>
    <copyField source="typeB_exact" dest="typeB"/>
    <copyField source="typeA_expanded" dest="interactorType"/>
    <copyField source="typeA_exact" dest="interactorType"/>
    <copyField source="typeB_expanded" dest="interactorType"/>
    <copyField source="typeB_exact" dest="interactorType"/>
    <copyField source="typeA_expanded_id" dest="interactorType_id"/>
    <copyField source="typeA_exact_id" dest="interactorType_id"/>
    <copyField source="typeB_expanded" dest="interactorType_id"/>
    <copyField source="typeB_exact_id" dest="interactorType_id"/>

    <copyField source="hostOrganism_expanded" dest="hostOrganism"/>
    <copyField source="hostOrganism_exact" dest="hostOrganism"/>
    <copyField source="hostOrganism_expanded_id" dest="hostOrganism_id"/>
    <copyField source="hostOrganism_exact_id" dest="hostOrganism_id"/>

    <copyField source="annotationA" dest="annotation"/>
    <copyField source="annotationB" dest="annotation"/>

    <copyField source="parameterA" dest="parameter"/>
    <copyField source="parameterB" dest="parameter"/>
    <copyField source="parameterInteraction" dest="parameter"/>

    <copyField source="line" dest="mitab"/>-->


</schema>
